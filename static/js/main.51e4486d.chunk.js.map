{"version":3,"sources":["constants.js","utils/commonfunctions.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/row.js","components/table.js","components/home.js","utils/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","MAP_TYPES","MAP_STATISTICS","MAP_VIEWS","MAPS_DIR","MAP_META","India","geoDataFile","mapType","graphObjectStates","graphObjectDistricts","Assam","Bihar","name","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","stateCodes","reverseStateCodes","Object","keys","map","key","index","push","code","STATE_CODES_REVERSE","STATE_POPULATIONS","Total","formatDate","unformattedDate","day","slice","month","year","time","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","capitalize","s","charAt","toUpperCase","capitalizeAll","str","toLowerCase","split","i","length","join","abbreviate","replace","parseDistrictZones","data","state","zones","reduce","ret","d","district","values","forEach","React","memo","props","useState","setData","console","log","t","useTranslation","useEffectOnce","SC","ST","OBC","deltaconfirmed","deltarecovered","className","style","animationDelay","ramp","color","n","canvas","d3","node","context","width","height","getContext","fillStyle","fillRect","legend","title","tickSize","marginTop","marginRight","marginBottom","marginLeft","svg","ticks","tickFormat","tickValues","ordinalWeights","attr","x","transition","duration","tickAdjust","g","selectAll","interpolate","Math","min","domain","range","copy","rangeRound","select","toDataURL","interpolator","assign","undefined","round","invertExtent","thresholds","quantiles","thresholdFormat","append","widthScale","a","b","xPos","w","acc","enter","max","bandwidth","call","on","remove","text","ChoroplethMap","statistic","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapOption","choroplethMap","useRef","choroplethLegend","mapMeta","ready","useCallback","geoData","path","current","topologyStates","topojson","objects","features","topologyDistricts","view","topology","projection","widthStyle","parseInt","fitWidth","heightStyle","fitSize","bBox","bounds","colorScale","svgLegend","widthLegend","heightLegend","stat","clamp","Number","isInteger","featureStates","f","properties","st_nm","obj","id","featureDistricts","onceTouchedRegion","regionSelection","sel","isHovered","this","classed","region","stopPropagation","parseFloat","total","toFixed","toString","parentNode","appendChild","meshStates","meshDistricts","useEffect","paths","nodes","highlightRegionInMap","Fragment","preserveAspectRatio","ref","Unknown","position","colorInterpolationFilters","type","getRegionFromState","mapName","states","districts","stateTestData","anchor","setAnchor","setMapOption","setCurrentMap","currentMapMeta","useMemo","currentMapData","dtype","acc1","acc2","zone","dataTypes","typeCount","districtWiseData","districtData","find","getRegionFromDistrict","confirmed","active","recovered","deaths","hoveredRegion","panelRegion","hoveredRegionCount","hoveredRegionZone","switchMapToState","newMapMeta","topDistrict","filter","sort","ReactDOM","unstable_batchedUpdates","display","window","innerWidth","onClick","lastupdatedtime","Date","parse","formatDistance","to","href","target","prevProps","currProps","equal","useBreakpoint","createBreakpoint","XL","L","S","StateCell","ArrowUp","classnames","DistrictHeaderCell","handleSort","sortData","breakpoint","sortColumn","isAscending","DistrictCell","delta","DistrictRow","onHighlightDistrict","sortedDistricts","onMouseEnter","data-for","data-tip","notes","data-event","data-event-off","e","onHighlightState","showDistricts","setShowDistricts","useLocalStorage","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","_onHighlightState","newSortData","statecode","statenotes","colSpan","paddingBottom","align","place","effect","multiline","scrollHide","globalEventOff","StateHeaderCell","sortedStates","setSortedStates","doSort","newSortedStates","y","localeCompare","Home","vstates","setVStates","stateDistrictWiseData","setStateDistrictWiseData","districtZones","setDistrictZones","setLastUpdated","fetched","setFetched","showUpdates","setShowUpdates","setNewUpdate","getStates","Promise","all","axios","get","zonesResponse","stateDistrictWiseResponse","Helmet","content","summary","ScrollToTop","pathname","useLocation","scrollTo","schemaMarkup","alternateName","url","image","App","pages","pageLink","displayName","animationDelayForNavbar","showInNavbar","darkMode","setDarkMode","isThemeSet","matchMedia","matches","document","querySelector","classList","add","JSON","stringify","fallback","render","location","page","exact","match","params","stateCode","Boolean","hostname","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"qOAAaA,EAAuB,CAClC,KACA,KACA,OAGWC,EAA0B,CACrC,KACA,KACA,OAIWC,EACF,UADEA,EAEJ,QAIIC,EACJ,EADIA,EAEE,EAFFA,EAGL,EAGKC,EACH,EADGA,EAEA,EAGAC,EAAW,wBAEXC,EAAW,CACtBC,MAAO,CACLC,YAAY,GAAD,OAAKH,EAAL,eACXI,QAASP,EACTQ,kBAAmB,eACnBC,qBAAsB,4BAExB,8BAA+B,CAC7BH,YAAY,GAAD,OAAKH,EAAL,+BACXI,QAASP,EACTS,qBAAsB,kCAExB,oBAAqB,CACnBH,YAAY,GAAD,OAAKH,EAAL,0BACXI,QAASP,EACTS,qBAAsB,6BAExB,iBAAkB,CAChBH,YAAY,GAAD,OAAKH,EAAL,uBACXI,QAASP,EACTS,qBAAsB,0BAExBC,MAAO,CACLJ,YAAY,GAAD,OAAKH,EAAL,eACXI,QAASP,EACTS,qBAAsB,kBAExBE,MAAO,CACLC,KAAM,QACNN,YAAY,GAAD,OAAKH,EAAL,eACXI,QAASP,EACTS,qBAAsB,kBAExBI,WAAY,CACVD,KAAM,aACNN,YAAY,GAAD,OAAKH,EAAL,oBACXI,QAASP,EACTS,qBAAsB,uBAExBK,aAAc,CACZF,KAAM,eACNN,YAAY,GAAD,OAAKH,EAAL,sBACXI,QAASP,EACTS,qBAAsB,yBAExB,2CAA4C,CAC1CH,YAAY,GAAD,OAAKH,EAAL,oBACXI,QAASP,EACTS,qBAAsB,cAExBM,MAAO,CACLT,YAAY,GAAD,OAAKH,EAAL,eACXI,QAASP,EACTS,qBAAsB,kBAExBO,UAAW,CACTV,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExBQ,OAAQ,CACNX,YAAY,GAAD,OAAKH,EAAL,gBACXI,QAASP,EACTS,qBAAsB,mBAExBS,IAAK,CACHZ,YAAY,GAAD,OAAKH,EAAL,aACXI,QAASP,EACTS,qBAAsB,gBAExBU,QAAS,CACPb,YAAY,GAAD,OAAKH,EAAL,iBACXI,QAASP,EACTS,qBAAsB,oBAExBW,QAAS,CACPd,YAAY,GAAD,OAAKH,EAAL,iBACXI,QAASP,EACTS,qBAAsB,oBAExB,mBAAoB,CAClBH,YAAY,GAAD,OAAKH,EAAL,yBACXI,QAASP,EACTS,qBAAsB,4BAExB,oBAAqB,CACnBH,YAAY,GAAD,OAAKH,EAAL,sBACXI,QAASP,EACTS,qBAAsB,yBAExBY,UAAW,CACTf,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExBa,OAAQ,CACNhB,YAAY,GAAD,OAAKH,EAAL,gBACXI,QAASP,EACTS,qBAAsB,mBAExBc,YAAa,CACXjB,YAAY,GAAD,OAAKH,EAAL,qBACXI,QAASP,EACTS,qBAAsB,wBAExB,iBAAkB,CAChBH,YAAY,GAAD,OAAKH,EAAL,uBACXI,QAASP,EACTS,qBAAsB,0BAExBe,YAAa,CACXlB,YAAY,GAAD,OAAKH,EAAL,qBACXI,QAASP,EACTS,qBAAsB,wBAExBgB,QAAS,CACPnB,YAAY,GAAD,OAAKH,EAAL,iBACXI,QAASP,EACTS,qBAAsB,oBAExBiB,UAAW,CACTpB,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExBkB,QAAS,CACPrB,YAAY,GAAD,OAAKH,EAAL,iBACXI,QAASP,EACTS,qBAAsB,oBAExBmB,SAAU,CACRtB,YAAY,GAAD,OAAKH,EAAL,kBACXI,QAASP,EACTS,qBAAsB,qBAExBoB,OAAQ,CACNvB,YAAY,GAAD,OAAKH,EAAL,gBACXI,QAASP,EACTS,qBAAsB,mBAExBqB,WAAY,CACVxB,YAAY,GAAD,OAAKH,EAAL,oBACXI,QAASP,EACTS,qBAAsB,uBAExBsB,OAAQ,CACNzB,YAAY,GAAD,OAAKH,EAAL,gBACXI,QAASP,EACTS,qBAAsB,mBAExBuB,UAAW,CACT1B,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExBwB,OAAQ,CACN3B,YAAY,GAAD,OAAKH,EAAL,gBACXI,QAASP,EACTS,qBAAsB,mBAExB,aAAc,CACZH,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExByB,UAAW,CACT5B,YAAY,GAAD,OAAKH,EAAL,mBACXI,QAASP,EACTS,qBAAsB,sBAExB0B,QAAS,CACP7B,YAAY,GAAD,OAAKH,EAAL,iBACXI,QAASP,EACTS,qBAAsB,oBAExB2B,YAAa,CACX9B,YAAY,GAAD,OAAKH,EAAL,qBACXI,QAASP,EACTS,qBAAsB,wBAExB,gBAAiB,CACfH,YAAY,GAAD,OAAKH,EAAL,sBACXI,QAASP,EACTS,qBAAsB,yBAGxB,cAAe,CACbH,YAAY,GAAD,OAAKH,EAAL,oBACXI,QAASP,EACTS,qBAAsB,wBAIb4B,EAAc,CACzBC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,eACJC,GAAI,MACJC,GAAI,UACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,cACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,8BACJC,GAAI,aACJC,GAAI,2CACJC,GAAI,QACJC,GAAI,oBACJC,GAAI,SACJC,GAAI,cACJC,GAAI,cAGAC,EAAa,GACbC,EAAoB,GAC1BC,OAAOC,KAAKxC,GAAayC,KAAI,SAACC,EAAKC,GAGjC,OAFAL,EAAkBtC,EAAY0C,IAAQA,EACtCL,EAAWO,KAAK,CAACC,KAAMH,EAAKnE,KAAMyB,EAAY0C,KACvC,QAEF,IAAMI,EAAsBR,EAOtBS,EAAoB,CAC/B,8BAA+B,MAC/B,iBAAkB,QAClB,oBAAqB,OACrB1E,MAAO,QACPC,MAAO,QACPE,WAAY,OACZC,aAAc,QACd,2CAA4C,MAC5CC,MAAO,QACPG,IAAK,MACLC,QAAS,QACTC,QAAS,QACT,mBAAoB,KACpB,oBAAqB,QACrBC,UAAW,QACXL,UAAW,QACXC,OAAQ,QACRK,OAAQ,MACRC,YAAa,KACb,iBAAkB,QAClBC,YAAa,SACbC,QAAS,OACTC,UAAW,OACXC,QAAS,OACTC,SAAU,MACVC,OAAQ,QACRC,WAAY,OACZC,OAAQ,QACRC,UAAW,QACXC,OAAQ,MACR,aAAc,QACdC,UAAW,OACXC,QAAS,OACT,gBAAiB,SACjBC,YAAa,QACb,cAAe,QACfiD,MAAO,SCnRIC,G,yCAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,YA0DK,IAAMC,EAAe,SAACC,GAC3B,IAAMC,EAAkB,IAAIC,KAAKC,aAAa,SAC9C,OAAOC,MAAMJ,GAAS,IAAMC,EAAgBI,OAAOL,IAoIxCM,EAAa,SAACC,GACzB,MAAiB,kBAANA,EAAuB,GAC3BA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEZ,MAAM,IAGhCe,EAAgB,SAACH,GAC5B,GAAiB,kBAANA,EAAgB,MAAO,GAElC,IADA,IAAMI,EAAMJ,EAAEK,cAAcC,MAAM,KACzBC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC9BH,EAAIG,GAAKR,EAAWK,EAAIG,IAE1B,OAAOH,EAAIK,KAAK,MAGLC,EAAa,SAACV,GACzB,OAAOA,EAAEZ,MAAM,EAAG,GAAKY,EAAEZ,MAAM,GAAGuB,QAAQ,YAAa,KAG5CC,EAAqB,SAACC,EAAMC,GACvC,IAAMC,EAAQF,EAAKG,QAAO,SAACC,EAAKC,GAG9B,OAFAD,EAAIC,EAAEJ,OAASG,EAAIC,EAAEJ,QAAU,GAC/BG,EAAIC,EAAEJ,OAAOI,EAAEC,UAAYD,EACpBD,IACN,IAIH,OAHA1C,OAAO6C,OAAOpF,GAAaqF,SAAQ,SAACP,GAC7BC,EAAMD,KAAQC,EAAMD,GAAS,OAE7BA,EAAK,eAAKA,EAAQC,EAAMD,IAAUC,G,kCC/L5BO,UAAMC,MAnErB,SAAeC,GAAQ,IAAD,EACIC,mBAASD,EAAMX,MADnB,mBACbA,EADa,KACPa,EADO,KAEpBC,QAAQC,IAAI,SAASf,GAFD,IAGbgB,EAAKC,cAALD,EAaP,OAXAE,aAAc,WACZL,EAAQ,CACNM,IAAKR,EAAMX,KAAKmB,GAChBC,IAAKT,EAAMX,KAAKoB,GAChBC,KAAMV,EAAMX,KAAKqB,IACjBC,eAAgB,GAEhBC,eAAgB,QAKlB,yBAAKC,UAAU,SACb,yBACEA,UAAU,gCACVC,MAAO,CAACC,eAAgB,OAExB,4BAAKV,EAAE,OACP,gCAEGhC,MAAMgB,EAAKsB,gBACR,GACAtB,EAAKsB,eAAiB,EACtB,IAAM3C,EAAaqB,EAAKsB,gBACxB,KANN,KASA,4BAAK3C,EAAaqB,EAAKmB,IAAvB,MAGF,yBACEK,UAAU,8BACVC,MAAO,CAACC,eAAgB,SAExB,wBAAIF,UAAU,WAAWR,EAAE,OAC3B,oCACA,wBAAIQ,UAAU,uBAAuB7C,EAAaqB,EAAKoB,MAGzD,yBACEI,UAAU,+BACVC,MAAO,CAACC,eAAgB,SAExB,wBAAIF,UAAU,WAAWR,EAAE,QAC3B,gCAEGhC,MAAMgB,EAAKuB,gBACR,GACAvB,EAAKuB,eAAiB,EACtB,IAAM5C,EAAaqB,EAAKuB,gBACxB,KANN,KASA,wBAAIC,UAAU,0BACX7C,EAAaqB,EAAKqB,KAAM,U,OCwKnC,SAASM,EAAKC,GAMZ,IAN6B,IAAVC,EAAS,uDAAL,IAEjBC,EAASC,IAAU,gBAAgBC,OACnCC,GAAYH,EAAOI,MAAQL,EAAKC,EAAOK,OAAS,EAAIL,GAAQM,WAChE,MAEO1C,EAAI,EAAGA,EAAImC,IAAKnC,EACvBuC,EAAQI,UAAYT,EAAMlC,GAAKmC,EAAI,IACnCI,EAAQK,SAAS5C,EAAG,EAAG,EAAG,GAE5B,OAAOoC,EAGMS,MAlPf,WAeS,IAAD,yDAAJ,GAdFX,EAcM,EAdNA,MACAY,EAaM,EAbNA,MAaM,IAZNC,gBAYM,MAZK,EAYL,MAXNP,aAWM,MAXE,IAWF,MAVNC,cAUM,MAVG,GAAKM,EAUR,MATNC,iBASM,MATM,GASN,MARNC,mBAQM,MARQ,EAQR,MAPNC,oBAOM,MAPS,GAAKH,EAOd,MANNI,kBAMM,MANO,EAMP,EALNC,EAKM,EALNA,IAKM,IAJNC,aAIM,MAJEb,EAAQ,GAIV,EAHNc,EAGM,EAHNA,WACAC,EAEM,EAFNA,WACAC,EACM,EADNA,eAEKJ,IACHA,EAAMf,IACI,OACPoB,KAAK,QAASjB,GACdiB,KAAK,SAAUhB,GACfgB,KAAK,UAAW,CAAC,EAAG,EAAGjB,EAAOC,IAC9BV,MAAM,WAAY,WAClBA,MAAM,UAAW,UAEtB,IAOI2B,EAPEpC,EAAI8B,EAAIO,aAAaC,SAAS,KAEhCC,EAAa,SAACC,GACFA,EAAEC,UAAU,cACpBN,KAAK,KAAMT,EAAYE,EAAeT,IAM9C,GAAIP,EAAM8B,YAAa,CACrB,IAAM7B,EAAI8B,KAAKC,IAAIhC,EAAMiC,SAASlE,OAAQiC,EAAMkC,QAAQnE,QAExDyD,EAAIxB,EACDmC,OACAC,WACCjC,IAAYA,IAAec,EAAYX,EAAQS,GAAcd,IAGjEiB,EACGmB,OAAO,SACPd,KAAK,QAAS,QACdA,KAAK,IAAKN,GACVM,KAAK,IAAKT,GACVS,KAAK,QAASjB,EAAQW,EAAaF,GACnCQ,KAAK,SAAUhB,EAASO,EAAYE,GACpCO,KAAK,sBAAuB,QAC5BA,KACC,aACAxB,EACEC,EAAMmC,OAAOF,OAAO9B,IAAYA,IAAe,EAAG,GAAIF,KACtDqC,kBAKH,GAAItC,EAAMuC,cA2Bb,GA1BArB,EAAIW,UAAU,QAAQJ,WAAWrC,GAAGmC,KAAK,UAAW,GAEpDC,EAAI1F,OAAO0G,OACTxC,EACGmC,OACAI,aAAapC,IAAoBc,EAAYX,EAAQS,IACxD,CACEmB,MADF,WAEI,MAAO,CAACjB,EAAYX,EAAQS,MAKlCG,EACGmB,OAAO,SACPd,KAAK,QAAS,QACdA,KAAK,IAAKN,GACVM,KAAK,IAAKT,GACVS,KAAK,QAASjB,EAAQW,EAAaF,GACnCQ,KAAK,SAAUhB,EAASO,EAAYE,GACpCO,KAAK,sBAAuB,QAC5BA,KAAK,aAAcxB,EAAKC,EAAMuC,gBAAgBD,aAC9Cb,WAAWrC,GACXmC,KAAK,UAAW,IAGdC,EAAEL,MAAO,CACZ,QAAmBsB,IAAfpB,EAA0B,CAC5B,IAAMpB,EAAI8B,KAAKW,MAAMvB,EAAQ,GAC7BE,EAAalB,IACJF,GACNjE,KAAI,SAAC8B,GAAD,OAAOqC,IAAYH,EAAMiC,SAAUnE,GAAKmC,EAAI,OAE3B,oBAAfmB,IACTA,EAAajB,SAAyBsC,IAAfrB,EAA2B,KAAOA,UAM1D,GAAIpB,EAAM2C,aAAc,CAC3B,IAAMC,EAAa5C,EAAM4C,WACrB5C,EAAM4C,aACN5C,EAAM6C,UACN7C,EAAM6C,YACN7C,EAAMiC,SAEJa,OACWL,IAAfrB,EACI,SAAC3C,GAAD,OAAOA,GACe,kBAAf2C,EACPjB,IAAUiB,GACVA,EAENI,EAAIrB,MAED8B,OAAO,EAAE,EAAGjC,EAAMkC,QAAQnE,OAAS,IACnCqE,WAAW,CAACnB,EAAYX,EAAQS,IAEnCG,EACG6B,OAAO,KACPlB,UAAU,QACVzD,KAAK4B,EAAMkC,SACXlE,KAAK,QACLuD,KAAK,KAAK,SAAC9C,EAAGX,GAAJ,OAAU0D,EAAE1D,EAAI,MAC1ByD,KAAK,IAAKT,GACVS,KAAK,SAAS,SAAC9C,EAAGX,GAAJ,OAAU0D,EAAE1D,GAAK0D,EAAE1D,EAAI,MACrCyD,KAAK,SAAUhB,EAASO,EAAYE,GACpCO,KAAK,QAAQ,SAAC9C,GAAD,OAAOA,KAEvB4C,EAAalB,KAAU,EAAGyC,EAAW7E,QACrCqD,EAAa,SAACtD,GACZ,OAAW,IAAPA,EAAiBgF,EAAgB,GAC5BhF,IAAM8E,EAAW7E,OAAS,EAC1BD,IAAM8E,EAAW7E,OAAS,EAC1B+E,EAAgBF,EAAW9E,GAAK,IAAKA,GACvCgF,EAAgBF,EAAW9E,GAAIA,QAHjC,OAQJ,CAMH,GALAoD,EACGmB,OAAO,SACPZ,WAAWrC,GACXmC,KAAK,UAAW,GAChBA,KAAK,aAAc,MACjBD,EAcE,CACL,IAAM0B,EAAa7C,MAEhB8B,OAAO,CAAC,EAAGX,EAAe/C,QAAO,SAAC0E,EAAGC,GAAJ,OAAUD,EAAIC,OAC/Cd,WAAW,CAAC,EAAG9B,EAAQW,EAAaF,IAEjCoC,EAAO7B,EAAetF,KAAI,SAACoH,EAAGtF,GAAJ,OAC9BwD,EACG3E,MAAM,EAAGmB,GACTS,QAAO,SAAC8E,EAAKD,GAAN,OAAYC,EAAML,EAAWI,KAAInC,MAG7CO,EAAIrB,MAAkB8B,OAAOjC,EAAMiC,UAAUC,MAAMiB,GAEnDjC,EACGW,UAAU,QACVzD,KAAK4B,EAAMiC,UACXjE,MAAK,SAACsF,GAAD,OACJA,EACGP,OAAO,QACPxB,KAAK,IAAKC,GACVD,KAAK,SAAS,SAAC9C,EAAGX,GAAJ,OAAUkF,EAAW1B,EAAexD,UAEtDyD,KAAK,IAAKT,GACVS,KAAK,SAAUhB,EAASO,EAAYE,GACpCO,KAAK,OAAQvB,GACbyB,WAAWrC,GACXmC,KAAK,IAAKC,GACVD,KAAK,SAAS,SAAC9C,EAAGX,GAAJ,OAAUkF,EAAW1B,EAAexD,OAClDyD,KAAK,UAAW,QA1CnBC,EAAIrB,MAED8B,OAAOjC,EAAMiC,UACbG,WAAW,CAACnB,EAAYX,EAAQS,IACnCG,EACGW,UAAU,QACVzD,KAAK4B,EAAMiC,UACXjE,KAAK,QACLuD,KAAK,IAAKC,GACVD,KAAK,IAAKT,GACVS,KAAK,QAASQ,KAAKwB,IAAI,EAAG/B,EAAEgC,YAAc,IAC1CjC,KAAK,SAAUhB,EAASO,EAAYE,GACpCO,KAAK,OAAQvB,GAiClB2B,EAAa,aA+Bf,OA5BAT,EACGmB,OAAO,SACPd,KAAK,YAFR,sBAEoChB,EAASS,EAF7C,MAGGS,WAAWrC,GACXmC,KAAK,QAAS,QACdkC,KACCtD,IACcqB,GACXL,MAAMA,EAA6B,kBAAfC,EAA0BA,OAAaqB,GAC3DrB,WAAiC,oBAAfA,EAA4BA,OAAaqB,GAC3D5B,SAASA,GACTQ,WAAWA,IAEfqC,GAAG,SAAS,WACXxC,EAAIuC,KAAK9B,GAAY8B,MAAK,SAACvC,GAAD,OAASA,EAAImB,OAAO,WAAWsB,eAE1DF,MAAK,SAAC7B,GAAD,OACJA,EACGS,OAAO,aACPd,KAAK,QAAS,YACdA,KAAK,IAAKN,GACVM,KAAK,IAAKT,EAAYE,EAAeT,EAAS,GAC9CgB,KAAK,OAAQ,gBACbA,KAAK,cAAe,SACpBA,KAAK,cAAe,QACpBqC,KAAKhD,MAGLM,EAAId,Q,iBCgREyD,MA5ef,YASI,IAAD,IARDC,EAQC,EARDA,UACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,WACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,UAEMC,EAAgBC,iBAAO,MACvBC,EAAmBD,iBAAO,MAE1BE,EAAUnN,EAAS0M,EAAWlM,MAE9B4M,EAAQC,uBACZ,SAACC,GACC,IAyBIC,EACAvE,EACAC,EA3BEW,EAAMf,IAAUmE,EAAcQ,SAE9BC,EACJN,EAAQhN,UAAYP,EAChB8N,IACEJ,EACAA,EAAQK,QAAQR,EAAQ/M,oBAE1B,CAACwN,SAAU,IACXC,EACJnB,EAAWoB,OAAShO,EAChB4N,IACEJ,EACAA,EAAQK,QAAQR,EAAQ9M,uBAE1B,CAACuN,SAAU,IAEXG,EACJrB,EAAWoB,OAAShO,EAChB2N,EACAI,EAEAG,EAAanF,MAMnB,IAAKe,EAAIK,KAAK,WAAY,CACxB,IAAMgE,EAAaC,SAAStE,EAAIrB,MAAM,UACtC,GAAIuE,EAAiBkB,EAAWG,SAASF,EAAYF,OAChD,CACH,IAAMK,EAAcF,SAAStE,EAAIrB,MAAM,WACvCyF,EAAWK,QAAQ,CAACJ,EAAYG,GAAcL,GAGhD,IAAMO,GADNf,EAAO1E,IAAWmF,IACAO,OAAOR,GACzB/E,GAASsF,EAAK,GAAG,GACjBrF,GAAUqF,EAAK,GAAG,GAClB1E,EAAIK,KAAK,UAAT,cAA2BjB,EAA3B,YAAoCC,IAEtC,IAAMqF,EAAO1E,EAAIK,KAAK,WAAW1D,MAAM,KACvCyC,GAASsF,EAAK,GACdrF,GAAUqF,EAAK,GACfN,EAAWK,QAAQ,CAACrF,EAAOC,GAAS8E,GACpCR,EAAO1E,IAAWmF,GAGlB,IAMIQ,EANEC,EAAY5F,IAAUqE,EAAiBM,SACvCkB,EAAcR,SAASO,EAAUlG,MAAM,UACvCoG,GAAgBF,EAAUxE,KAAK,UAKrC,GAJAwE,EAAUxE,KAAK,UAAf,cAAiCyE,EAAjC,YAAgDC,IAI5CjC,EAAWkC,OAAS/O,EACtB2O,EAAa3F,IACX,CAAC,MAAO,SAAU,SAClB,CAAC,UAAW,UAAW,YAGzB4F,EAAUtC,MAAK,kBACb9C,EAAO,CACLX,MAAO8F,EACPxF,MAAO0F,EACPzF,OAAQ0F,EACR5E,WAAY,GACZJ,WAAY,EACZF,YAAa,GACbG,IAAK6E,EACLzE,eAAgBxF,OAAO6C,OAAOmF,YAG7B,CAeLgC,EAAa3F,IAET,CAAC,EAAG4B,KAAKwB,IAAI,EAAGO,EAAUO,GAAWd,OAhBf,SAACnE,GACzB,OAAQiF,GACN,IAAK,KACH,OAAOlE,IAAuB,IAAJf,GAC5B,IAAK,KACH,OAAOe,IAAwB,IAAJf,GAC7B,IAAK,MACH,OAAOe,IAAyB,IAAJf,GAG9B,QACE,WAQH+G,OAAM,GACTJ,EAAUtC,MAAK,kBACb9C,EAAO,CACLX,MAAO8F,EACPlF,MACElD,EAAc2G,IACbL,EAAWkC,OAAS/O,EACjB,qBACA,UACNmJ,MAAO0F,EACPzF,OAAQ0F,EACR9E,MAAO,EACPC,WAAY,SAAU3C,EAAGX,EAAGmC,GAC1B,GACE+D,EAAWkC,OAAS/O,GACnBiP,OAAOC,UAAU5H,GAGpB,OAAIX,IAAMmC,EAAElC,OAAS,EAAUhB,EAAa0B,GAAK,IAC1C1B,EAAa0B,IAEtBwC,WAAY,EACZF,YAAa,GACbG,IAAK6E,OAIXA,EAAUxE,KACR,QACAyC,EAAWkC,OAAS/O,EAAsB,OAAS,IAIrD,IAAMmP,EAAgBvB,EAAeG,SAASlJ,KAAI,SAACuK,GACjD,IAAMlI,EAAQkI,EAAEC,WAAWC,MACrBC,EAAM5K,OAAO0G,OAAO,GAAI+D,GAE9B,OADAG,EAAIC,GAAJ,UAAYlC,EAAQ/M,kBAApB,YAAyC2G,GAClCqI,KAIHE,EAAmBzB,EAAkBD,SAASlJ,KAAI,SAACuK,GACvD,IAAM7H,EAAW6H,EAAEC,WAAW9H,SACxBL,EAAQkI,EAAEC,WAAWC,MACrBC,EAAM5K,OAAO0G,OAAO,GAAI+D,GAE9B,OADAG,EAAIC,GAAJ,UAAYlC,EAAQ9M,qBAApB,YAA4C0G,GAA5C,OAAoDK,GAC7CgI,KAIHtH,EAAI8B,EAAIO,aAAaC,SAAS,KAChCmF,EAAoB,KAClBC,EAAkB5F,EACrBmB,OAAO2B,EAAWoB,OAAShO,EAAmB,UAAY,cAC1DyK,UAAU,QACVzD,KACC4F,EAAWoB,OAAShO,EAChBkP,EACAM,GACJ,SAACnI,GAAD,OAAOA,EAAEkI,MAEV3I,MAAK,SAACsF,GACL,IAAMyD,EAAMzD,EAAMP,OAAO,QAAQxB,KAAK,IAAKsD,GAE3C,OADAkC,EAAIhE,OAAO,SACJgE,KAERxF,KAAK,SAAS,SAAU9C,GACvB,IAAMuI,EAAY7G,IAAU8G,MAAMC,QAAQ,aAC1C,MAAM,eAAN,OAAsB7C,EAAtB,YAAmC2C,EAAY,YAAc,OAE9DnH,MAAM,SAAU,WAChB6D,GAAG,cAAc,SAAUjF,GAC1B,IAAM0I,EAAS,CAAC9I,MAAOI,EAAE+H,WAAWC,OAChChI,EAAE+H,WAAW9H,WAAUyI,EAAOzI,SAAWD,EAAE+H,WAAW9H,UAC1DyF,EAAqBgD,MAEtBzD,GAAG,cAAc,SAACjF,GACboI,IAAsBpI,IAAGoI,EAAoB,SAElDnD,GAAG,cAAc,SAACjF,GACYoI,EAAzBA,IAAsBpI,EAAuB,KACxBA,KAE1BiF,GAAG,SA8KN,SAAqBjF,GAEnB,GADA0B,IAASiH,kBACLP,GAAqBpC,EAAQhN,UAAYP,EAAiB,OAE9DgK,EAAIK,KAAK,iBAAkB,QAC3BL,EAAIW,UAAU,gBAAgBN,KAAK,iBAAkB,QAErD0C,EAAUxF,EAAE+H,WAAWC,UApLtBlF,KAAK,iBAAkB,QAE1BuF,EAAgBzE,OAAO,SAASuB,MAAK,SAAUnF,GAC7C,GAAIuF,EAAWkC,OAAS/O,EAAsB,CAC5C,IAEI8I,EAFE5B,EAAQI,EAAE+H,WAAWC,MACrB/H,EAAWD,EAAE+H,WAAW9H,SAQ9B,OALEuB,EADEvB,EAEAqF,EAAQ1F,IAAU0F,EAAQ1F,GAAOK,GAC7BqF,EAAQ1F,GAAOK,GAAU2F,GACzB,EACCN,EAAQ1F,GAAS0F,EAAQ1F,GAAOgG,GAAa,EAEpD+B,OACEiB,WACSpH,GAAK6D,EAAUO,GAAWiD,OAAS,MAA1C,KACAC,QAAQ,IACVC,WACF,UACA9J,EAAcgB,GAAsBL,OAK1CyI,EACGrF,WAAWrC,GACXmC,KAAK,QAAQ,SAAU9C,GACtB,IAAIwB,EACJ,GAAI+D,EAAWkC,OAAS/O,EAAqB,CAC3C,IAAMkH,EAAQI,EAAE+H,WAAWC,MACrB/H,EAAWD,EAAE+H,WAAW9H,SAC9BuB,EACE8D,EAAQ1F,IAAU0F,EAAQ1F,GAAOK,GAC7BqF,EAAQ1F,GAAOK,GACf,MACD,CACL,IAAML,EAAQI,EAAE+H,WAAWC,MACrB/H,EAAWD,EAAE+H,WAAW9H,SAE5BuB,EADEvB,EAEAqF,EAAQ1F,IAAU0F,EAAQ1F,GAAOK,GAC7BqF,EAAQ1F,GAAOK,GAAU2F,GACzB,EACCN,EAAQ1F,GAAS0F,EAAQ1F,GAAOgG,GAAa,EAGxD,OADoB,IAANpE,EAAU,YAAc6F,EAAW7F,MAGlDsB,KAAK,UAAU,WACd,IAAMyF,EAAY7G,IAAU8G,MAAMC,QAAQ,aAE1C,OADIF,GAAWC,KAAKQ,WAAWC,YAAYT,MACvCjD,EAAWkC,OAAS/O,EACf6P,EAAY,UAAY,KAExBA,EAAS,UAEI,OAAd3C,EACI,UACc,OAAdA,EACA,UACc,QAAdA,EACA,UAGA,IAEN,QAGP5C,aACAF,KAAK,iBAAkB,OAE1BL,EACGO,aACAC,SAAS+C,EAAQhN,UAAYP,EAAkB,IAAM,GACrDwM,GAAG,OAAO,kBACTxC,EAAIK,KACF,QACAyC,EAAWkC,OAAS/O,EAAsB,OAAS,OAIzD,IAAIwQ,EAAa,GACblD,EAAQhN,UAAYP,KACtByQ,EAAa,CACX3C,IAAcJ,EAASA,EAAQK,QAAQR,EAAQ/M,sBAEtC,GAAGiP,GAAKlC,EAAQ/M,mBAE7B,IAAIkQ,EAAgB,GAChB5D,EAAWoB,OAAShO,KAEtBwQ,EAAgB,CACd5C,IAAcJ,EAASA,EAAQK,QAAQR,EAAQ9M,yBAEnC,GAAGgP,GAAKlC,EAAQ9M,sBAEhCuJ,EACGmB,OACC2B,EAAWoB,OAAShO,EAChB,iBACA,qBAELyK,UAAU,QACVzD,KACC4F,EAAWoB,OAAShO,EAAmBuQ,EAAaC,GACpD,SAACnJ,GAAD,OAAOA,EAAEkI,MAEV3I,MAAK,SAACsF,GAAD,OACJA,EACGP,OAAO,QACPxB,KAAK,IAAKsD,GACVtD,KAAK,eAAgBjB,EAAQ,QAEjCiB,KAAK,OAAQ,QACbE,WAAWrC,GACXmC,KAAK,gBAAgB,WACpB,OAAOkD,EAAQhN,UAAYP,GACzB8M,EAAWoB,OAAShO,EAClB,EACAkJ,EAAQ,OAEbiB,KAAK,UAAU,WACd,OAAIyC,EAAWkC,OAAS/O,EACf,YAED,GAAN,OACgB,OAAdkN,EACI,YACc,OAAdA,EACA,YACc,QAAdA,EACA,YAGA,OAKZnD,EACGmB,OAAO2B,EAAWoB,OAAShO,EAAmB,aAAe,WAC7DyK,UAAU,QACVzD,KACC4F,EAAWoB,OAAShO,EAChBwP,EACAN,GACJ,SAAC7H,GAAD,OAAOA,EAAEkI,MAEV3I,MAAK,SAACsF,GAAD,OAAWA,EAAMP,OAAO,QAAQxB,KAAK,IAAKsD,MAC/CtD,KAAK,QAAS,eACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,QAE1BL,EACGmB,OACC2B,EAAWoB,OAAShO,EAChB,oBACA,kBAELyK,UAAU,QACVzD,KACC4F,EAAWoB,OAAShO,EAAmBwQ,EAAgBD,GACvD,SAAClJ,GAAD,OAAOA,EAAEkI,MAEV3I,MAAK,SAACsF,GAAD,OAAWA,EAAMP,OAAO,QAAQxB,KAAK,IAAKsD,MAC/CtD,KAAK,OAAQ,QACbE,WAAWrC,GACXmC,KAAK,eAAgBjB,EAAQ,KAC7BiB,KAAK,SAAU,aAalBL,EAAIK,KAAK,iBAAkB,QAAQmC,GAAG,SAAS,WACzCe,EAAQhN,UAAYP,GACtBiN,EAAqB,CACnB9F,MAAO,eAKf,CACEoG,EACAT,EAAWkC,KACXlC,EAAWoB,KACXtB,EACAO,EACAD,EACAL,EACAI,EACAF,IA2CJ,OAvCA4D,qBAAU,WACR,sBAAC,4BAAA5E,EAAA,sEACoB9C,IAAQsE,EAAQjN,aADpC,OACO4G,EADP,OAEK0F,GAAaQ,EAAcQ,SAC7BJ,EAAMtG,GAHT,0CAAD,KAMC,CAACqG,EAASX,EAAWY,IAExBmD,qBAAU,YACqB,SAACV,GAC5B,IAAMW,EAAQ3H,IAAa,gBAC3B2H,EAAMvG,KAAK,SAAU,MACrBuG,EAAMZ,QAAQ,aAAa,SAACzI,EAAGX,EAAGiK,GAAW,IAAD,EAC1C,OACEZ,EAAOzI,YAAP,UAAoBD,EAAE+H,kBAAtB,aAAoB,EAAc9H,WAClCyI,EAAO9I,QAAUI,EAAE+H,WAAWC,QAE9BsB,EAAMjK,GAAG2J,WAAWC,YAAYK,EAAMjK,IACtCqC,IAAU4H,EAAMjK,IAAIyD,KAAK,UAAU,SAAU9C,GAC3C,OAAIuF,EAAWkC,OAAS/O,EAA4B,UAC7CgJ,IAAU8G,MAAMC,QAAQ,MAC3B,UACA/G,IAAU8G,MAAMC,QAAQ,MACxB,UACA/G,IAAU8G,MAAMC,QAAQ,OACxB,UAGA,SAEC,MAKbc,CAAqB9D,KACpB,CAACA,EAAmBF,EAAWkC,OAGhC,kBAAC,IAAM+B,SAAP,KACE,yBAAKrI,UAAU,sBAAsBC,MAAO,CAACC,eAAgB,SAC3D,yBAAK6G,GAAG,QAAQuB,oBAAoB,gBAAgBC,IAAK7D,GACvD,uBAAG1E,UAAU,WACb,uBAAGA,UAAU,cACb,uBAAGA,UAAU,kBACb,uBAAGA,UAAU,sBAEd6E,EAAQhN,UAAYP,IAApB,UACD6M,EAAQC,EAAWlM,aADlB,aACD,EAA0BsQ,WADzB,UAEDrE,EAAQC,EAAWlM,aAFlB,aAED,EAA0BsQ,QAAQ/D,IAChC,yBAAKzE,UAAU,cACb,kBAAC,IAAD,MADF,wBAEoByE,EAFpB,sCAKA,IAGJ,yBACEzE,UAAU,6BACVC,MAAO,CAACC,eAAgB,SAExB,yBACE6G,GAAG,SACHpG,OAAO,KACP2H,oBAAoB,gBACpBC,IAAK3D,GAEL,2BAAO5E,UAAU,SACjB,uBAAGA,UAAU,QACX,0BAAMA,UAAU,eAGpB,4BACEA,UAAU,cACVC,MAAO,CAACwI,SAAU,WAAY9H,OAAQ,MAG1C,yBAAKV,MAAO,CAACwI,SAAU,WAAY9H,OAAQ,IACzC,8BACE,4BAAQoG,GAAG,gBAAgB2B,0BAA0B,QACnD,mCACEC,KAAK,SACL5J,OAAO,yG,oEC3cf6J,EAAqB,SAACnK,GAC1B,GAAKA,EAEL,OADY,eAAOA,IAihBNQ,UAAMC,MAvgBrB,YAaI,IAZF2J,EAYC,EAZDA,QACAC,EAWC,EAXDA,OACAC,EAUC,EAVDA,UACArK,EASC,EATDA,MAEA4F,GAOC,EARD0E,cAQC,EAPD1E,mBACAC,EAMC,EANDA,qBACA0E,EAKC,EALDA,OACAC,EAIC,EAJDA,UACAzE,EAGC,EAHDA,UACA0E,EAEC,EAFDA,aAEC,IADD3E,uBACC,SACMhF,EAAKC,cAALD,EADN,EAEmCJ,mBAAS,CAC3ClH,KAAM2Q,EACNvC,KAAM/O,EACNiO,KACE9N,EAASmR,GAAShR,UAAYP,EAC1BE,EACAA,IARP,mBAEM4M,EAFN,KAEkBgF,EAFlB,KAUKC,EAAiB3R,EAAS0M,EAAWlM,MAV1C,EAYmCoR,mBAAQ,WAC1C,IAAIC,EAAiB,GACjBrF,EAAY,GAChB,GAAIE,EAAWkC,OAAS/O,EAAqB,CAM3C,GAJA2M,EADkB,CAAC,MAAO,SAAU,SACdvF,QAAO,SAAC8E,EAAK+F,GAEjC,OADA/F,EAAI+F,GAAS,EACN/F,IACN,IACC4F,EAAexR,UAAYP,EAC7BiS,EAAiBrN,OAAOC,KAAKuC,GAAOC,QAAO,SAAC8K,EAAMhL,GAShD,OARAgL,EAAKhL,GAASvC,OAAOC,KAAKuC,EAAMD,IAAQE,QAAO,SAAC+K,EAAM5K,GACpD,IAAM6K,EAAOjL,EAAMD,GAAOK,GAAU6K,KAKpC,OAJIA,IACFD,EAAK5K,GAAY6K,EACjBzF,EAAUyF,IAAS,GAEdD,IACN,IACID,IACN,SACE,GAAIJ,EAAexR,UAAYP,EAAiB,CACrD,IAAMmH,EAAQ2F,EAAWlM,KACzBqR,EAAe9K,GAASvC,OAAOC,KAAKuC,EAAMD,IAAQE,QAChD,SAAC8E,EAAK3E,GACJ,IAAM6K,EAAOjL,EAAMD,GAAOK,GAAU6K,KAKpC,OAJIA,IACFlG,EAAI3E,GAAY6K,EAChBzF,EAAUyF,IAAS,GAEdlG,IAET,SAGC,CACL,IAAMmG,EAAY,CAAC,KAAM,KAAM,OAK/B,GAJA1F,EAAY0F,EAAUjL,QAAO,SAAC8E,EAAK+F,GAEjC,OADA/F,EAAI+F,GAAS,CAAC9B,MAAO,EAAG/D,IAAK,GACtBF,IACN,IACC4F,EAAexR,UAAYP,EAC7BiS,EAAiBT,EAAOnK,QAAO,SAAC8E,EAAKhF,GAgBnC,OAfAgF,EAAIhF,EAAMA,OAAS,GACnBmL,EAAU5K,SAAQ,SAACwK,GACjB,IAAIK,EAAYjE,SACdnH,EAAgB,aAAV+K,EAAuBA,EAAQ,WAEnCpF,EAAWkC,OAAS/O,IACtBsS,EAAa,IAAMA,EAAanN,EAAkB+B,EAAMA,QACtC,UAAhBA,EAAMA,QACRyF,EAAUsF,GAAO9B,OAASmC,EACtBA,EAAY3F,EAAUsF,GAAO7F,MAC/BO,EAAUsF,GAAO7F,IAAMkG,IAG3BpG,EAAIhF,EAAMA,OAAO+K,GAASK,KAErBpG,IACN,SACE,GAAI4F,EAAexR,UAAYP,EAAiB,CACrD,IAAMwS,GACJf,EAAU3E,EAAWlM,OAAS,CAAC6R,aAAc,KAC7CA,aACFR,EAAenF,EAAWlM,MAAQgE,OAAOC,KAAK2N,GAAkBnL,QAC9D,SAAC8E,EAAK3E,GAUJ,OATA2E,EAAI3E,GAAY,GAChB8K,EAAU5K,SAAQ,SAACwK,GACjB,IAAMK,EAAYjE,SAASkE,EAAiBhL,GAAU0K,IACtDtF,EAAUsF,GAAO9B,OAASmC,EACtBA,EAAY3F,EAAUsF,GAAO7F,MAC/BO,EAAUsF,GAAO7F,IAAMkG,GAEzBpG,EAAI3E,GAAU0K,GAASK,KAElBpG,IAET,IAEF8F,EAAenF,EAAWlM,MAAMyE,MAAQmM,EAAOkB,MAC7C,SAACvL,GAAD,OAAW2F,EAAWlM,OAASuG,EAAMA,UAI3C,MAAO,CAACyF,EAAWqF,KAClB,CACDnF,EAAWlM,KACXkM,EAAWkC,KACX+C,EAAexR,QACfkR,EACArK,EACAoK,IAvGD,mBAYM5E,EAZN,KAYiBqF,EAZjB,OA0GoCD,mBAAQ,WAC3C,GAAKhF,EAAkBxF,SAKhB,CACL,IAWMA,EA/IkB,SAACiL,EAAc7R,GAC3C,GAAK6R,EAEL,OADY,eAAOA,GA6IEE,EAXQlB,EAAUzE,EAAkB7F,QAAU,CAC7DsL,aAAc,KAEsBA,aACpCzF,EAAkBxF,WACf,CACHoL,UAAW,EACXC,OAAQ,EACRC,UAAW,EACXC,OAAQ,GAIR/F,EAAkBxF,UAEhBL,EAAQmK,EACVE,EAAOkB,MAAK,SAACvL,GAAD,OAAWA,EAAMA,QAAU6F,EAAkB7F,UAM3D,OAJAK,EAASA,SAAWwF,EAAkBxF,SACtCA,EAASL,MAAQA,EAAMA,MACnB4K,EAAexR,UAAYP,IAC7BmH,EAAQqK,EAAOkB,MAAK,SAACvL,GAAD,MAA2B,UAAhBA,EAAMA,UAChC,CAACK,EAAUL,GA3BlB,IAAMA,EAAQmK,EACZE,EAAOkB,MAAK,SAACvL,GAAD,OAAW6F,EAAkB7F,QAAUA,EAAMA,UAE3D,MAAO,CAACA,EAAOA,KA0BhB,CAACqK,EAAQC,EAAWM,EAAexR,QAASyM,IAzI9C,mBA0GMgG,EA1GN,KA0GqBC,EA1GrB,KA2IDtC,qBAAU,WACR,QAA0BpF,IAAtByB,GAAyD,OAAtBA,EAEvC,GAAI,aAAcA,GAChB,GACEF,EAAWlM,OAASoM,EAAkB7F,QAEpC4K,EAAexR,UAAYP,GAC3B8M,EAAWoB,OAAShO,GAEtB,CACA,IAAMiH,EAAQ6F,EAAkB7F,MAEhC,IADmB/G,EAAS+G,GAE1B,OAEF2K,EAAc,CACZlR,KAAMuG,EACN+G,KAAMhO,EACN8O,KACElC,EAAWkC,OAAS/O,EAChBA,EACA6M,EAAWkC,aAGZ9B,GAAmB6E,EAAexR,UAAYP,GACvD8R,EAAc,CACZlR,KAAM,QACNsN,KACEpB,EAAWkC,OAAS/O,EAChBC,EACAA,EACN8O,KAAMlC,EAAWkC,SAGpB,CAAC9B,EAAiBF,EAAmBF,EAAYiF,EAAexR,UAEnE,IAwDI2S,EACAC,EAzDEC,EAAmB3F,uBACvB,SAACtG,GACC,IAAMkM,EAAajT,EAAS+G,GAC5B,GAAKkM,EAGL,GAAIA,EAAW9S,UAAYP,EAAiB,CAAC,IACpCyS,GAAgBhB,EAAUtK,IAAU,CACzCsL,aAAc,KADTA,aAGDa,EAAc1O,OAAOC,KAAK4N,GAC7Bc,QAAO,SAACpM,GAAD,MAAqB,YAAVA,KAClBqM,MAAK,SAACzH,EAAGC,GACR,OAAOyG,EAAazG,GAAG4G,UAAYH,EAAa1G,GAAG6G,aAClD,GACLa,IAASC,yBAAwB,WAC/BzG,EAAqB,CACnBzF,SAAU8L,EACVnM,MAAOA,IAET2K,EAAc,CACZlR,KAAMuG,EACN+G,KAAMhO,EACN8O,KACElC,EAAWkC,OAAS/O,EAChBA,EACA6M,EAAWkC,eAIrByE,IAASC,yBAAwB,WAC/B5B,EAAc,CACZlR,KAAM,QACNsN,KACEpB,EAAWkC,OAAS/O,EAChBC,EACAA,EACN8O,KAAMlC,EAAWkC,OAEnB/B,EAAqB,CACnB9F,MAAO,eAKf,CAAC2F,EAAWkC,KAAMyC,EAAWxE,IAa/B,GAAIH,EAAWkC,OAAS/O,EAAqB,CAC3C,IAAMiH,GACJ8L,EAAcxL,UAAYyK,EAAee,EAAc7L,OACnD8K,EAAee,EAAc7L,OAAO6L,EAAcxL,UAClDwL,EAAc7L,QAAU2F,EAAWlM,KACnCqR,EAAee,EAAc7L,OAC7B8K,EAAee,EAAc7L,OAAO9B,MAC1C6N,EAAqBhM,GACjB4F,EAAWkC,OAAS/O,EAClBiP,OAAOiB,WAAWjJ,GAAKiG,IAAYkD,QAAQ,IAC3CnJ,GAAKiG,GACP,OAEJgG,EACE/L,EAAM4L,EAAc7L,QACpBC,EAAM4L,EAAc7L,OAAO6L,EAAcxL,UACrCJ,EAAM4L,EAAc7L,OAAO6L,EAAcxL,UAAU6K,KACnD,GAGR,OACE,yBACE3J,UAAS,+BACI,gBAAXiJ,EAA2B,WAAa,IAE1ChJ,MAAO,CACLC,eAAgB,OAChB+K,QAAoB,eAAXhC,EAA0B,OAAS,KAG7CiC,OAAOC,WAAa,KACnB,yBACEnL,UAAS,iBAAuB,gBAAXiJ,EAA2B,WAAa,IAC7DmC,QAAS,WACPlC,EAAqB,gBAAXD,EAA2B,KAAO,iBAG9C,kBAAC,IAAD,OAGJ,yBAAKjJ,UAAU,UACb,4BACGR,EAAE4E,EAAWlM,MADhB,IACwBsH,EAAE,QAE1B,4BACG0L,OAAOC,YAAc,IAAM3L,EAAE,OAASA,EAAE,SAD3C,UAC4D,IACzD6J,EAAexR,UAAYP,EACxBkI,EAAE,YACFA,EAAE,YAAa,IAClBA,EAAE,sBAIP,yBAAKQ,UAAU,aACb,yBACEA,UAAS,yBACO,OAAdyE,EAAqB,UAAY,IAEnCxE,MAAO,CAACC,eAAgB,MACxBkL,QAAS,kBAAMjC,EAAa,QAE5B,6BAAK+B,OAAOC,WAAoB3L,EAAE,QAClC,yBAAKQ,UAAU,gBACb,4BAAK7C,EAAaoN,EAAY5K,OAKlC,yBACEK,UAAS,iCACO,OAAdyE,EAAqB,UAAY,IAEnCxE,MAAO,CAACC,eAAgB,QACxBkL,QAAS,kBAAMjC,EAAa,QAE5B,6BAAK+B,OAAOC,WAAoB3L,EAAE,QAClC,yBAAKQ,UAAU,gBACb,4BAAK7C,EAAaoN,EAAY3K,KAC9B,mCAIJ,yBACEI,UAAS,kCACO,QAAdyE,EAAsB,UAAY,IAEpCxE,MAAO,CAACC,eAAgB,QACxBkL,QAAS,kBAAMjC,EAAa,SAE5B,6BAAK+B,OAAOC,WAAoB3L,EAAE,SAClC,yBAAKQ,UAAU,gBACb,4BAAK7C,EAAaoN,EAAY1K,SAQpC,yBAAKG,UAAU,gBAAgBC,MAAO,CAACC,eAAgB,SACrD,wBACEF,UAAS,UACPoE,EAAWkC,OAAS/O,EACF,OAAdkN,EACEA,EACA,GACFgG,IAGLH,EAAcxL,SACXU,EAAE8K,EAAcxL,UAChBU,EAAE8K,EAAc7L,QAGrB4K,EAAexR,UAAYP,GAC1BiT,EAAYc,iBACV,yBAAKrL,UAAU,eACb,4BAAKR,EAAE,iBACP,4BACGhC,MAAM8N,KAAKC,MAAM3O,EAAW2N,EAAYc,mBACrC,GACAG,YACE,IAAIF,KAAK1O,EAAW2N,EAAYc,kBAChC,IAAIC,MAEN,IACA9L,EAAE,SAKb6J,EAAexR,UAAYP,EAC1B,kBAAC,IAAD,CAAMmU,GAAE,gBAAWhP,EAAoB8N,EAAY9L,SACjD,yBAAKuB,UAAU,4BACb,8BAAOR,EAAE,qBACT,kBAAC,IAAD,QAGF,KAEH4E,EAAWkC,OAAS/O,IACpB8R,EAAexR,UAAYP,GACzB+R,EAAexR,UAAYP,GAC1B8M,EAAWkC,OAAS/O,GACtB,wBACEyI,UAAS,mBAA4B,cAAdyE,EAA4BA,EAAY,KAE9D+F,EACD,6BACA,8BACG/F,EAAW,IACXL,EAAWkC,OAAS/O,EAApB,WACOiI,EAAE,gBACN,KAGN,KAEH6J,EAAexR,UAAYP,EAC1B,yBACE0I,UAAU,qBACVoL,QAAS,kBAAMV,EAAiB,WAFlC,QAME,KAEHrB,EAAexR,UAAYP,GAC5BiS,EAAef,SACfe,EAAef,QAAQ/D,GAAa,EAClC,wBAAIzE,UAAU,WACXR,EAAE,yBADL,IACgC+J,EAAef,QAAQ/D,GAAY,IAChEjF,EAAE,WAEH,MAGN,6BACGiF,GACC,kBAAC,EAAD,CACEP,UAAWA,EACXE,WAAYA,EACZD,QAASoF,EACTjF,kBAAmBA,EACnBC,qBAAsBA,EACtBF,UAAWqG,EACXlG,gBAAiBA,EACjBC,UAAWA,KAKjB,yBAAKzE,UAAU,YACb,yBACEA,UAAS,cACPoE,EAAWkC,OAAS/O,EAAuB,UAAY,IAEzD6T,QAAS,WACPhC,EAAc,CACZlR,KAAMkM,EAAWlM,KACjBsN,KACE6D,EAAexR,UAAYP,EACvBE,EACAA,EACN8O,KAAM/O,IAEJ8R,EAAexR,UAAYP,GAC7BiN,EAAqB,CACnB9F,MAAO6F,EAAkB7F,UAI/B,4BAAKe,EAAE,iBAERgF,GACC,yBACExE,UAAS,cACPoE,EAAWkC,OAAS/O,EAA6B,UAAY,IAE/D6T,QAAS,WACH/B,EAAexR,UAAYP,IAC/B8R,EAAc,CACZlR,KAAMkM,EAAWlM,KACjBsN,KAAMhO,EACN8O,KAAM/O,IAERgN,EAAqB,CACnB9F,MAAO6F,EAAkB7F,WAI7B,4BACGe,EAAE,qBACH,yCAIN,yBACEQ,UAAS,cACPoE,EAAWkC,OAAS/O,EAAsB,UAAY,IAExD6T,QAAS,WACPhC,EAAc,CACZlR,KAAMkM,EAAWlM,KACjBsN,KAAMhO,EACN8O,KAAM/O,IAEJ8R,EAAexR,UAAYP,GAC7BiN,EAAqB,CACnB9F,MAAO,YAIb,uCAIJ,wBAAIuB,UAAU,4BAAd,UACYR,EAAE,8CAAgD,IAC5D,uBACEkM,KAAK,4EACLC,OAAO,WACP1L,MAAO,CAACG,MAAO,YAEdZ,EAAE,WAPP,SAjhBU,SAACoM,EAAWC,GAC1B,QAAKC,IAAMF,EAAUtH,kBAAmBuH,EAAUvH,uBAG7CwH,IAAMF,EAAUnH,UAAWoH,EAAUpH,cAGrCqH,IAAMF,EAAU3C,OAAQ4C,EAAU5C,Y,+FCVnC8C,GAAgBC,aAAiB,CAACC,GAAI,KAAMC,EAAG,IAAKC,EAAG,MAE7D,SAASC,GAAT,GAAwC,IAApB3N,EAAmB,EAAnBA,MAAOyF,EAAY,EAAZA,UACnBmI,EAAU/C,mBAAQ,kBAAM,kBAAC,KAAD,QAAkB,IAEhD,OACE,4BACE,0BAAMtJ,UAAWsM,KAAW,QAAD,aAAgBpI,KACxCzF,EAAM,QAAD,OAASyF,IAAe,GAAKmI,EAClC5N,EAAM,QAAD,OAASyF,IAAe,GAAKzF,EAAM,QAAD,OAASyF,KAEnD,0BAAMlE,UAAU,SACQ,IAArBvB,EAAMyF,GAAmB,IAAM/G,EAAasB,EAAMyF,MAM3D,SAASqI,GAAT,GAAgE,IAAnCC,EAAkC,EAAlCA,WAAYtI,EAAsB,EAAtBA,UAAWuI,EAAW,EAAXA,SAC5CC,EAAaX,KACZvM,EAAKC,cAALD,EAEP,OACE,wBAAI4L,QAAS,kBAAMoB,EAAWtI,KAC5B,yBAAKlE,UAAU,mBACb,0BACEA,UAAWsM,KAAW,4BAAQpI,GAA6B,MAAfwI,IAC5C1L,MAAOkD,GAES,MAAfwI,EACGxI,EAAUnH,MAAM,GACD,MAAf2P,EACAhP,EACEW,EAAyB,WAAd6F,EAAyB,WAAaA,IAEnD1E,EAAE9B,EAAyB,WAAdwG,EAAyB,WAAaA,KAEzD,yBACEjE,MAAO,CACLgL,QAASwB,EAASE,aAAezI,EAAY,UAAY,SAG1DuI,EAASG,YACR,yBAAK5M,UAAU,aAEf,yBAAKA,UAAU,kBAoB3B,IAAM6M,GAAe5N,IAAMC,MAZ3B,YAAkD,IAAvBJ,EAAsB,EAAtBA,SAAUoF,EAAY,EAAZA,UACnC,OACE,4BACE,0BAAMlE,UAAWsM,KAAW,QAAD,aAAgBpI,KACxCpF,EAASgO,MAAM5I,GAAa,GAAK,kBAAC,KAAD,MACjCpF,EAASgO,MAAM5I,GAAa,GAAKpF,EAASgO,MAAM5I,IAEnD,0BAAMlE,UAAU,SAAS7C,EAAa2B,EAASoF,SAgErD,IAAM6I,GAAc9N,IAAMC,MA/C1B,YAQI,IAPFoF,EAOC,EAPDA,kBACAxF,EAMC,EANDA,SACAL,EAKC,EALDA,MACAkL,EAIC,EAJDA,KACAqD,EAGC,EAHDA,oBACAC,EAEC,EAFDA,gBACAlE,EACC,EADDA,UAEOvJ,EAAKC,cAALD,EAEP,OACE,wBACEnD,IAAKyC,EAASA,SACdkB,UAAWsM,KAAW,WAAY,CAChC,kBAAmC,OAAjBhI,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBxF,YAAaA,IAEpDoO,aAAc,kBAAMF,EAAoBlO,EAAUL,KAElD,wBAAIuB,UAAWsM,KAAW,MAAD,cAAO3C,QAAP,IAAOA,OAAP,EAAOA,EAAMA,QACpC,yBAAK3J,UAAU,iBACb,0BAAMA,UAAU,cACbR,EAAEV,GACH,0BACEqO,WAAS,WACTC,WAAU,CAAC,CAACH,EAAgBnO,GAAUuO,QACtCC,aAAW,uBACXC,iBAAe,aACfnC,QAAS,SAACoC,GAAD,OAAOA,EAAEhG,oBAEjByF,EAAgBnO,GAAUuO,OAAS,kBAAC,KAAD,UAM3ChW,EAAwB+E,KAAI,SAAC8H,GAAD,OAC3B,kBAAC2I,GAAD,CACExQ,IAAK6H,EACLpF,SAAUiK,EAAUjK,GACpBoF,UAAWA,WAlDM,SAAC0H,EAAWC,GAAe,IAAD,IACnD,OAAIC,IAAK,UAACF,EAAUtH,yBAAX,aAAC,EAA6BxF,SAAU8M,EAAU9M,YAGvDgN,IAAK,UAACD,EAAUvH,yBAAX,aAAC,EAA6BxF,SAAU+M,EAAU/M,aAgT9CG,WAAMC,MAlOrB,YAQI,IAPF5C,EAOC,EAPDA,MACAmC,EAMC,EANDA,MACAsK,EAKC,EALDA,UACArK,EAIC,EAJDA,MACA4F,EAGC,EAHDA,kBACAmJ,EAEC,EAFDA,iBACAT,EACC,EADDA,oBACC,EAC6C5N,mBAAS2J,GADtD,mBACMkE,EADN,aAEyC7N,oBAAS,IAFlD,mBAEMsO,EAFN,KAEqBC,EAFrB,OAG+BC,aAAgB,mBAAoB,CAClEjB,WAAY,KACZC,aAAa,IALd,mBAGMH,EAHN,KAGgBoB,EAHhB,KAQKC,EAAUC,eACTvO,EAAKC,cAALD,EAEDwO,EAAU1E,mBACd,kBACE,0BACEtJ,UAAWsM,KACT,WACA,CAAC2B,gBAAiBP,GAClB,CAACQ,iBAAkBR,KAGrB,kBAAC,KAAD,SAGJ,CAACA,IAGGS,EAAoBpJ,uBACxB,SAACtG,GACMqN,IAAMrN,EAAMA,MAAP,OAAc6F,QAAd,IAAcA,OAAd,EAAcA,EAAmB7F,QACzCgP,EAAiBhP,KAGrB,CAACgP,EAAkBnJ,IA4BfkI,EAAazH,uBACjB,SAACb,GACC,IAAMkK,EAAc,CAClBxB,aAAcH,EAASG,YACvBD,WAAYzI,GAGd2J,EAAY3R,OAAO0G,OAAO,GAAI6J,EAAU2B,OAS5C,OAJA1O,aAAc,eAKZ,kBAAC,IAAM2I,SAAP,KACE,wBACErI,UAAWsM,KACT,QACA,CAAC,WAAgC,OAApB7N,EAAM4P,WACnB,CAAC,kBAAmC,OAAjB/J,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB7F,SAAUA,EAAMA,OACtD,CAAC,SAAUnC,EAAQ,IAAM,IAE3B4Q,aAAc,kBAAMiB,EAAkB1P,IACtC2M,QACsB,OAApB3M,EAAM4P,UACF,WACEV,GAAkBD,IAEpB,MAGN,4BACE,yBAAK1N,UAAU,iBACQ,OAApBvB,EAAM4P,WAAsBL,EAC7B,0BAAMhO,UAAU,cACbR,EAAEf,EAAMA,OAET,0BACE2O,WAAU,CAAC5N,EAAE,GAAD,OAAIf,EAAM6P,cACtBhB,aAAW,uBACXC,iBAAe,aACfnC,QAAS,SAACoC,GAAD,OAAOA,EAAEhG,oBAEjB/I,EAAM6P,YAAc,kBAAC,KAAD,UAM5BlX,EAAqBgF,KAAI,SAAC8H,EAAW5H,GAAZ,OACxB,kBAAC8P,GAAD,CAAW/P,IAAKC,EAAOmC,MAAOA,EAAOyF,UAAWA,QAInDwJ,GACC,kBAAC,IAAMrF,SAAP,KACE,wBAAIrI,UAAU,aACZ,wBAAIuO,QAAS,GACX,8BAIJ,wBAAIvO,UAAW,qBACb,wBAAIuO,QAAS,EAAGtO,MAAO,CAACuO,cAAe,IACrC,uBAAGxO,UAAU,WACb,2BACGxC,MAAM8N,KAAKC,MAAM3O,EAAW6B,EAAM4M,mBAC/B,GADH,UAEM7L,EAAE,gBAFR,YAE2BgM,YACtB,IAAIF,KAAK1O,EAAW6B,EAAM4M,kBAC1B,IAAIC,MAJT,YAKQ9L,EAAE,UAEG,OAAfyN,QAAe,IAAfA,OAAA,EAAAA,EAAiBzE,UAChB,yBAAKxI,UAAU,cACb,kBAAC,IAAD,MACCR,EAAE,oDAIT,wBACEiP,MAAM,SACNzO,UAAU,kBACVuO,QAAS,EACTnD,QAAS,WACP0C,EAAQvR,KAAR,gBAAsBkC,EAAM4P,cALhC,eAOU7O,EAAEf,EAAMA,OAPlB,aAUF,wBAAIuB,UAAWsM,KAAW,qBACxB,wBAAIlB,QAAS,kBAAMoB,EAAW,cAC5B,yBAAKxM,UAAU,mBACb,0BAAMgB,MAAM,YAAYxB,EAAE,aAC1B,yBACES,MAAO,CACLgL,QAC0B,aAAxBwB,EAASE,WAA4B,UAAY,SAGpDF,EAASG,YACR,yBAAK5M,UAAU,aAEf,yBAAKA,UAAU,kBAMtB3I,EAAwB+E,KAAI,SAAC8H,EAAW5H,GAAZ,OAC3B,kBAACiQ,GAAD,CACElQ,IAAKC,EACLkQ,WAAYA,EACZtI,UAAWA,EACXuI,SAAUA,SAOnBiB,GACCxR,OAAOC,KAAK8Q,GAAiB7Q,KAAI,SAAC0C,EAAUxC,GAAX,OAC/B,kBAACyQ,GAAD,CACE1Q,IAAKyC,EACLL,MAAOA,EACPK,SAAUA,EACViK,UAAWA,EACXY,KAAMjL,EAAMI,GACZmO,gBAAiBA,EACjB3I,kBAAmBA,EACnB0I,oBAAqBA,OAI1BU,GACC,wBAAI1N,UAAU,aACZ,wBAAIuO,QAAS,GACX,4BACA,kBAAC,KAAD,CACExH,GAAG,WACH2H,MAAM,QACN/F,KAAK,OACLgG,OAAO,QACPC,WAAW,EACXC,YAAY,EACZC,eAAe,gBAhPb,SAAClD,EAAWC,GAAe,IAAD,QACxC,QAAKC,IAAMF,EAAUnN,MAAMA,MAAOoN,EAAUpN,MAAMA,WAI/CqN,IAAK,UACJF,EAAUtH,yBADN,aACJ,EAA6B7F,MADzB,UAEJoN,EAAUvH,yBAFN,aAEJ,EAA6B7F,UAM9BqN,IAAK,UACJF,EAAUtH,yBADN,aACJ,EAA6BxF,SADzB,UAEJ+M,EAAUvH,yBAFN,aAEJ,EAA6BxF,cClJ7BiN,GAAgBC,aAAiB,CAACC,GAAI,KAAMC,EAAG,IAAKC,EAAG,MAE7D,SAAS4C,GAAT,GAA6D,IAAnCvC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAUvI,EAAY,EAAZA,UACxCwI,EAAaX,KACZvM,EAAKC,cAALD,EAEP,OACE,wBAAI4L,QAAS,kBAAMoB,EAAWtI,KAC5B,yBAAKlE,UAAU,mBACb,0BACEA,UAAWsM,KAAW,4BAAQpI,GAA6B,MAAfwI,IAC5C1L,MAAOkD,GAES,MAAfwI,EACGxI,EAAUnH,MAAM,GACD,MAAf2P,EACAhP,EACEW,EAAyB,WAAd6F,EAAyB,WAAaA,IAEnD1E,EAAE9B,EAAyB,WAAdwG,EAAyB,WAAaA,KAEzD,yBACEjE,MAAO,CACLgL,QAASwB,EAASE,aAAezI,EAAY,UAAY,SAG3D,yBACElE,UAAWsM,KACT,CAAC,WAAYG,EAASG,aACtB,CAAC,cAAeH,EAASG,mBAkMxB3N,WAAMC,MArLrB,YAOI,IANF4J,EAMC,EANDA,OACAC,EAKC,EALDA,UACArK,EAIC,EAJDA,MACA4F,EAGC,EAHDA,kBACAmJ,EAEC,EAFDA,iBACAT,EACC,EADDA,oBACC,EAC+BY,aAAgB,WAAY,CAC1DjB,WAAY,YACZC,aAAa,IAHd,mBACMH,EADN,KACgBoB,EADhB,KAKMrO,EAAKC,cAALD,EALN,EAOuCJ,mBACtC0J,EAAO+B,QAAO,SAACpM,GAAD,MAA+B,OAApBA,EAAM4P,cARhC,mBAOMW,EAPN,KAOoBC,EAPpB,KAkDKC,EAASnK,uBACb,SAAC0H,GACC,IAAM0C,EAAkB,YAAIH,GAAclE,MAAK,SAAClJ,EAAGwN,GACjD,MAA4B,UAAxB3C,EAASE,WACJF,EAASG,YACZhH,SAAShE,EAAE6K,EAASE,aAClB/G,SAASwJ,EAAE3C,EAASE,aACtB/G,SAASwJ,EAAE3C,EAASE,aAClB/G,SAAShE,EAAE6K,EAASE,aAEnBF,EAASG,YACZhL,EAAE6K,EAASE,YAAY0C,cAAcD,EAAE3C,EAASE,aAChDyC,EAAE3C,EAASE,YAAY0C,cAAczN,EAAE6K,EAASE,gBAGxDsC,EAAgBE,KAElB,CAACH,IAGGxC,EAAazH,uBACjB,SAACb,GACC,IAAMkK,EAAc,CAClBxB,aAAcH,EAASG,YACvBD,WAAYzI,GAEdgL,EAAOd,GACPP,EAAY3R,OAAO0G,OAAO,GAAI6J,EAAU2B,MAE1C,CAACc,EAAQrB,EAAapB,IAOxB,OAJA/M,aAAc,WACZwP,EAAOzC,MAGL3D,EAAO3K,OAAS,EAEhB,kBAAC,IAAMkK,SAAP,KACE,kBAAC,KAAD,CACEqG,MAAM,QACN/F,KAAK,OACLgG,OAAO,QACPC,WAAW,EACXE,eAAe,UAKjB,2BAAO9O,UAAU,iBAAiBC,MAAO,CAACC,eAAgB,SACxD,+BACE,4BACE,wBAAIF,UAAU,gBAAgBoL,QAAS,kBAAMoB,EAAW,WACtD,yBAAKxM,UAAU,mBACb,0BAAMgB,MAAM,SAASxB,EAAE,aACvB,yBACES,MAAO,CACLgL,QAC0B,UAAxBwB,EAASE,WAAyB,UAAY,SAGlD,yBACE3M,UAAWsM,KACT,CAAC,WAAYG,EAASG,aACtB,CAAC,cAAeH,EAASG,mBAMlCxV,EAAqBgF,KAAI,SAAC8H,EAAW5H,GAAZ,OACxB,kBAACyS,GAAD,CACE1S,IAAKC,EACLkQ,WAAYA,EACZC,SAAUA,EACVvI,UAAWA,SAMlB4E,GACC,+BACGkG,EAAa5S,KAAI,SAACqC,EAAOnC,GAAW,IAAD,EAEhC,OACE,kBAAC,GAAD,CACED,IAAKoC,EAAM4P,UACX5P,MAAOA,EACPsK,UAAS,UAAEA,EAAUtK,EAAMA,cAAlB,aAAE,EAAwBsL,aACnCrL,MAAOA,EAAMD,EAAMA,OACnB6F,kBACEwH,IAAK,OAACxH,QAAD,IAACA,OAAD,EAACA,EAAmB7F,MAAOA,EAAMA,OAClC6F,EACA,KAENmJ,iBAAkBA,EAClBT,oBAAqBA,QAShClE,GACC,+BACE,kBAAC,GAAD,CACEzM,IAAK,EACLoC,MAAOqK,EAAO,GACd2E,iBAAkBA,OASvB,yBAAKxN,MAAO,CAACU,OAAQ,cArLhB,SAACiL,EAAWC,GAC1B,OAAOC,IAAMF,EAAUtH,kBAAmBuH,EAAUvH,sB,iEC6LvCgL,OArNf,SAAcnQ,GAAQ,IAAD,EACSC,mBAAS,MADlB,mBACZ0J,EADY,aAEW1J,mBAAS,OAFpB,mBAEZmQ,EAFY,KAEHC,EAFG,OAGuCpQ,mBAAS,MAHhD,mBAGZqQ,EAHY,KAGWC,EAHX,OAIuBtQ,mBAAS,MAJhC,mBAIZuQ,EAJY,KAIGC,EAJH,OAKuBxQ,mBAAS,MALhC,gCAMmBA,mBAAS,KAN5B,mBAMCyQ,GAND,aAOiBzQ,mBAAS,MAP1B,gCAQWA,oBAAS,IARpB,mBAQZ0Q,EARY,KAQHC,EARG,OAS+B3Q,mBAAS,CACzDX,MAAO,UAVU,mBASZ6F,EATY,KASOC,EATP,OAYmBnF,oBAAS,GAZ5B,mBAYZ4Q,EAZY,KAYCC,EAZD,OAaS7Q,mBAAS,MAblB,mBAaZ6J,EAbY,KAaJC,EAbI,OAce9J,mBAAS,MAdxB,mBAcZqF,EAdY,KAcD0E,EAdC,OAe6C/J,oBAC9D,GAhBiB,iCAmBuBwO,aACxC,gBACA,OArBiB,qCAuBeA,aAAgB,aAAa,IAvB5C,qBAuBDsC,IAvBC,aAyBN5G,mBACX,kBACE,kBAAC,KAAD,CACE8B,QAAS,WACP6E,GAAgBD,GAChBE,IAAa,QAInB,CAACA,GAAcF,IAGD1G,mBACd,kBACE,kBAAC,KAAD,CACE8B,QAAS,WACP6E,GAAgBD,QAItB,CAACA,IAGHtQ,aAAc,WACZyQ,QAqBF,IAAMA,GAAS,uCAAG,wCAAA9M,EAAA,+EAKJ+M,QAAQC,IAAI,CAEpBC,KAAMC,IAAI,sGAPE,0CAILC,EAJK,KAIXhS,KAJW,SAeJ4R,QAAQC,IAAI,CAEpBC,KAAMC,IAAI,mGACVD,KAAMC,IAAI,2DAlBE,mCAYLhB,EAZK,KAYX/Q,KACMiS,EAbK,KAaXjS,KAQHgR,EAAWD,GAEXK,EAAiBrR,EAAmBiS,EAAc9R,QAWlDmR,EAAeN,EAAQ,GAAGlE,iBAY1BqE,EAAyBe,GACzBV,GAAW,GA/CG,kDAiDdzQ,QAAQC,IAAR,MAjDc,0DAAH,qDAqDTkO,GAAmB1I,uBAAY,SAACtG,GACpC,IAAKA,EAAO,OAAO8F,EAAqB,MACxCA,EAAqB,CAAC9F,MAAOA,EAAMA,UAClC,IAEGuO,GAAsBjI,uBAAY,SAACjG,EAAUL,GACjD,IAAKA,IAAUK,EAAU,OAAOyF,EAAqB,MACrDA,EAAqB,CAACzF,WAAUL,MAAOA,EAAMA,UAC5C,IAMH,OACE,kBAAC,IAAM4J,SAAP,KACE,yBAAKrI,UAAU,QACb,kBAAC0Q,GAAA,EAAD,KACE,mFACA,0BACExY,KAAK,QACLyY,QAAQ,8DAIZ,yBAAK3Q,UAAU,aACb,yBAAKA,UAAU,kBAAkBC,MAAO,CAACC,eAAgB,QAsBxD4I,GAAU,kBAAC,EAAD,CAAOtK,KAAM+Q,EAAQ,KAE/BE,GACC,kBAAC,GAAD,CAEE3G,OAAQyG,EACRqB,SAAS,EACT7H,UAAW0G,EACX/Q,MAAOiR,EACPrL,kBAAmBA,EACnBC,qBAAsBA,EACtBkJ,iBAAkBA,GAClBT,oBAAqBA,MAK3B,yBAAKhN,UAAU,cACb,kBAAC,IAAMqI,SAAP,KACGyH,GACC,kBAAC,EAAD,CACEjH,QAAS,QACTC,OAAQyG,EACRxG,UAAW0G,EACX/Q,MAAOiR,EAEPrL,kBAAmBA,EACnBC,qBAAsBA,EACtB0E,OAAQA,EACRC,UAAWA,EACXzE,UAAWA,EACX0E,aAAcA,SCnOf,SAAS0H,KAAe,IAC9BC,EAAYC,eAAZD,SAMP,OAJA7I,qBAAU,WACRiD,OAAO8F,SAAS,EAAG,KAClB,CAACF,IAEG,K,WCSHG,GAAe,CACnB,WAAY,qBACZ,QAAS,MACT/Y,KAAM,2DACNgZ,cAAe,mBACfC,IAAK,gCACLC,MAAO,8CAiFMC,OA9Ef,WACc5R,cAALD,EADO,IAGR8R,EAAQ,CACZ,CACEC,SAAU,oBACV/L,KAAM8J,GACNkC,YAAa,OACbC,wBAAyB,GACzBC,cAAc,IATL,EAamB9D,aAAgB,YAAY,GAb/C,mBAaN+D,EAbM,KAaIC,EAbJ,OAcQhE,aAAgB,cAAc,GAA5CiE,EAdM,oBAwCb,OAxBAnS,aAAc,WAEVwL,OAAO4G,YACP5G,OAAO4G,WAAW,gCAAgCC,UACjDF,EAEDD,GAAY,IAEZ1G,OAAO4G,YACN5G,OAAO4G,WAAW,gCAAgCC,SAClDF,GAEDD,GAAY,MAIhB3S,IAAMgJ,WAAU,WACV0J,EACFK,SAASC,cAAc,QAAQC,UAAUC,IAAI,aAE7CH,SAASC,cAAc,QAAQC,UAAUnO,OAAO,eAEjD,CAAC4N,IAGF,yBAAK3R,UAAU,OACb,kBAAC0Q,GAAA,EAAD,KACE,4BAAQ/H,KAAK,uBACVyJ,KAAKC,UAAUpB,MAIpB,kBAAC,IAAD,KACE,kBAACJ,GAAD,MACA,kBAAC,WAAD,CAAUyB,SAAU,yBAAKtS,UAAU,UACjC,kBAAC,KAAD,CACEuS,OAAQ,gBAAEC,EAAF,EAAEA,SAAF,OACN,yBAAKxS,UAAU,mBACb,kBAAC,KAAD,CAAQwS,SAAUA,GACflB,EAAMlV,KAAI,SAACqW,EAAMnW,GAChB,OACE,kBAAC,KAAD,CACEoW,OAAK,EACLzN,KAAMwN,EAAKlB,SACXgB,OAAQ,gBAAEI,EAAF,EAAEA,MAAF,OACN,kBAACF,EAAKjN,KAAN,CAAWnJ,IAAKsW,EAAMC,OAAOC,WAAavW,KAE5CD,IAAKC,OAIX,kBAAC,KAAD,CAAUmP,GAAG,+BCnFXqH,QACW,cAA7B5H,OAAOsH,SAASO,UAEe,UAA7B7H,OAAOsH,SAASO,UAEhB7H,OAAOsH,SAASO,SAASJ,MACvB,2DCXN5H,IAASwH,OACP,kBAAC,WAAD,CAAUD,SAAU,IAClB,kBAAC,GAAD,OAEFN,SAASgB,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcpO,MACrBqO,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNjU,QAAQiU,MAAMA,EAAMC,c","file":"static/js/main.51e4486d.chunk.js","sourcesContent":["export const STATE_ROW_STATISTICS = [\n  'SC',\n  'ST',\n  'OBC',\n  // 'deaths',\n];\nexport const DISTRICT_ROW_STATISTICS = [\n  'SC',\n  'ST',\n  'OBC',\n\n];\n\nexport const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n  DISTRICT: 'district',\n};\n\nexport const MAP_STATISTICS = {\n  TOTAL: 0,\n  PER_MILLION: 1,\n  ZONE: 2,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAPS_DIR = '/covid19skeleton/maps';\n\nexport const MAP_META = {\n  India: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectStates: 'india-states',\n    graphObjectDistricts: 'india-districts-2019-734',\n  },\n  'Andaman and Nicobar Islands': {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andhrapradesh_district',\n  },\n  Assam: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli and Daman and Diu': {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'dnh-and-dd',\n  },\n  Delhi: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'delhi_district',\n  },\n  Karnataka: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'karnataka_district',\n  },\n  Kerala: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'kerala_district',\n  },\n  Goa: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'goa_district',\n  },\n  Gujarat: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'gujarat_district',\n  },\n  Haryana: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jharkhand_district',\n  },\n  Ladakh: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'ladakh_district',\n  },\n  Lakshadweep: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'maharashtra_district',\n  },\n  Manipur: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'manipur_district',\n  },\n  Meghalaya: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'meghalaya_district',\n  },\n  Mizoram: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'mizoram_district',\n  },\n  Nagaland: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'nagaland_district',\n  },\n  Odisha: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'odisha_district',\n  },\n  Puducherry: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'puducherry_district',\n  },\n  Punjab: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'punjab_district',\n  },\n  Rajasthan: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'rajasthan_district',\n  },\n  Sikkim: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tamilnadu_district',\n  },\n  Telangana: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'telangana_district',\n  },\n  Tripura: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tripura_district',\n  },\n  Uttarakhand: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'westbengal_district',\n  },\n};\n\nexport const STATE_CODES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nconst stateCodes = [];\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\nexport const STATE_CODES_ARRAY = stateCodes;\n\n// Source: Projected Populations (2019)\n// National Commission on Population, \"Population Projections for India and\n// States (2011-2036)\", Table-8 (p43), November 2019\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\nexport const STATE_POPULATIONS = {\n  'Andaman and Nicobar Islands': 397000,\n  'Andhra Pradesh': 52221000,\n  'Arunachal Pradesh': 1504000,\n  Assam: 34293000,\n  Bihar: 119520000,\n  Chandigarh: 1179000,\n  Chhattisgarh: 28724000,\n  'Dadra and Nagar Haveli and Daman and Diu': 959000,\n  Delhi: 19814000,\n  Goa: 1540000,\n  Gujarat: 67936000,\n  Haryana: 28672000,\n  'Himachal Pradesh': 7300000,\n  'Jammu and Kashmir': 13203000,\n  Jharkhand: 37403000,\n  Karnataka: 65798000,\n  Kerala: 35125000,\n  Ladakh: 293000,\n  Lakshadweep: 68000,\n  'Madhya Pradesh': 82232000,\n  Maharashtra: 122153000,\n  Manipur: 3103000,\n  Meghalaya: 3224000,\n  Mizoram: 1192000,\n  Nagaland: 2150000,\n  Odisha: 43671000,\n  Puducherry: 1504000,\n  Punjab: 29859000,\n  Rajasthan: 77264000,\n  Sikkim: 664000,\n  'Tamil Nadu': 75695000,\n  Telangana: 37220000,\n  Tripura: 3992000,\n  'Uttar Pradesh': 224979000,\n  Uttarakhand: 11141000,\n  'West Bengal': 96906000,\n  Total: 1332900000,\n};\n\nexport const DISTRICTS_ARRAY = [\n  {\n    district: 'Nicobars',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'North and Middle Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'South Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'Anantapur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Chittoor',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'East Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Guntur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Krishna',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Kurnool',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Prakasam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'S.P.S. Nellore',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Srikakulam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Visakhapatnam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Vizianagaram',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'West Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Y.S.R.',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Anjaw',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Changlang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kamle',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kra Daadi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kurung Kumey',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lepa Rada',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lohit',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Longding',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Namsai',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Pakke Kessang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Papum Pare',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Shi Yomi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tawang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tirap',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Baksa',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Barpeta',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Biswanath',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Bongaigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Cachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Charaideo',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Chirang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Darrang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhemaji',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhubri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dibrugarh',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dima Hasao',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Goalpara',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Golaghat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hailakandi',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hojai',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Jorhat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup Metropolitan',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karimganj',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kokrajhar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Lakhimpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Majuli',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Morigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nagaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nalbari',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sivasagar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sonitpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'South Salmara Mancachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Tinsukia',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Udalguri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'West Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Araria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Arwal',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Banka',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Begusarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhagalpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhojpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Buxar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Darbhanga',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gaya',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gopalganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jamui',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jehanabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kaimur Bhabua',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Katihar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Khagaria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kishanganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Lakhisarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhepura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhubani',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Munger',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Muzaffarpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nalanda',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nawada',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'West Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Patna',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'East Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Purnia',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Rohtas',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saharsa',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Samastipur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheikhpura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheohar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sitamarhi',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Siwan',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Supaul',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Vaishali',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Chandigarh',\n    othernamesspellings: '',\n    state: 'Chandigarh',\n  },\n  {\n    district: 'Balod',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Baloda Bazar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bametara',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bastar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bijapur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dakshin Bastar Dantewada',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dhamtari',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Durg',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Gariaband',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Janjgir Champa',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Jashpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kabeerdham',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kondagaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Korba',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Koriya',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mahasamund',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mungeli',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Narayanpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raipur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Rajnandgaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Sukma',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surajpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surguja',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Uttar Bastar Kanker',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dadra and Nagar Haveli',\n    othernamesspellings: '',\n    state: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    district: 'Daman',\n    othernamesspellings: '',\n    state: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    district: 'Diu',\n    othernamesspellings: '',\n    state: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    district: 'Central Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'New Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'Shahdara',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'South Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'Ahmadabad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Amreli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Anand',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Aravalli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Banas Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bharuch',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bhavnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Botad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Chota Udaipur',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Devbhumi Dwarka',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Dohad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gandhinagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gir Somnath',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Jamnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Junagadh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kachchh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kheda',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahesana',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahisagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Morbi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Narmada',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Navsari',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Panch Mahals',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Patan',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Porbandar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Rajkot',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Sabar Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surat',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surendranagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Tapi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'The Dangs',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Vadodara',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Valsad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Ambala',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bhiwani',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Charki Dadri',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Faridabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Fatehabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Gurugram',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Hisar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jhajjar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jind',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kaithal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Karnal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kurukshetra',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Mahendragarh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Nuh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Palwal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panchkula',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rewari',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rohtak',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sirsa',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sonipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Yamunanagar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Chamba',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kangra',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kinnaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kullu',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Lahul and Spiti',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Mandi',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Shimla',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Sirmaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Solan',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Una',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Anantnag',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Badgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bandipore',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Baramula',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Doda',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ganderbal',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Jammu',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kathua',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kishtwar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kulgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kupwara',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Mirpur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Muzaffarabad',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Pulwama',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Punch',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Rajouri',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ramban',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Reasi',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Samba',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Shupiyan',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Srinagar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Udhampur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bokaro',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Chatra',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Deoghar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dhanbad',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dumka',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Garhwa',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Giridih',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Godda',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Gumla',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Hazaribagh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Jamtara',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Khunti',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Kodarma',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Latehar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Lohardaga',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pakur',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Palamu',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pashchimi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Purbi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ramgarh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ranchi',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Sahibganj',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Saraikela-Kharsawan',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Simdega',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Bagalkote',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ballari',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Belagavi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru Rural',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bidar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chamarajanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkaballapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkamagaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chitradurga',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dakshina Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Davanagere',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dharwad',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Gadag',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Hassan',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Haveri',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kalaburagi',\n    othernamesspellings: 'Gulbarga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kodagu',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kolar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Koppal',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mandya',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mysuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Raichur',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ramanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Shivamogga',\n    othernamesspellings: 'Shimoga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Tumakuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Udupi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Uttara Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Vijayapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Yadgir',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Alappuzha',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Ernakulam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Idukki',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kannur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kasaragod',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kollam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kottayam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kozhikode',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Malappuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Palakkad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Pathanamthitta',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thiruvananthapuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thrissur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Wayanad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kargil',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Leh',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Lakshadweep',\n    othernamesspellings: '',\n    state: 'Lakshadweep',\n  },\n  {\n    district: 'Agar Malwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Alirajpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Anuppur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ashoknagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Balaghat',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Barwani',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Betul',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhind',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhopal',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Burhanpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhatarpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhindwara',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Damoh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Datia',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dewas',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dhar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dindori',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khandwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Guna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Gwalior',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Harda',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Hoshangabad',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Indore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jabalpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jhabua',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Katni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandla',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandsaur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Morena',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Narsimhapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Neemuch',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Niwari',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Panna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Raisen',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rajgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ratlam',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rewa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Satna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sehore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Seoni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shahdol',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shajapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sheopur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shivpuri',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sidhi',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Singrauli',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Tikamgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ujjain',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Umaria',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Vidisha',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khargone',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ahmadnagar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Akola',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Amravati',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bhandara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bid',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Buldana',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Chandrapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Dhule',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gadchiroli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gondiya',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Hingoli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalgaon',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalna',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Kolhapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Latur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai Suburban',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nagpur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nanded',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nandurbar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nashik',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Osmanabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Palghar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Parbhani',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Pune',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Ratnagiri',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sangli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Satara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sindhudurg',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Solapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Thane',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Wardha',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Washim',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Yavatmal',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bishnupur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Chandel',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Churachandpur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal East',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal West',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Jiribam',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kakching',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kamjong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kangpokpi',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Noney',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Pherzawl',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Senapati',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tamenglong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tengnoupal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Thoubal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Ukhrul',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'East Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'North Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Ribhoi',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Aizawl',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Champhai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Kolasib',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lawngtlai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lunglei',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Mamit',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Saiha',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Serchhip',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Dimapur',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kiphire',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kohima',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Longleng',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mokokchung',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mon',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Peren',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Phek',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Tuensang',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Wokha',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Zunheboto',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Anugul',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Balangir',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baleshwar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baudh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bhadrak',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Cuttack',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Debagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Dhenkanal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Gajapati',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Ganjam',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jagatsinghapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jajapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jharsuguda',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kalahandi',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kandhamal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendrapara',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendujhar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Khordha',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Koraput',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Malkangiri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Mayurbhanj',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nabarangapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nayagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nuapada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Puri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Rayagada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sambalpur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Subarnapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sundargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Karaikal',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Mahe',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Puducherry',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Yanam',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Amritsar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Barnala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Bathinda',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Faridkot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fatehgarh Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fazilka',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Firozpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Gurdaspur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Hoshiarpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Jalandhar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Kapurthala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ludhiana',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Mansa',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Moga',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Pathankot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Patiala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Rupnagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'S.A.S. Nagar',\n    othernamesspellings: 'Mohali',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sangrur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Shahid Bhagat Singh Nagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sri Muktsar Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Tarn Taran',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ajmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Alwar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Banswara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Baran',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Barmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bharatpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bhilwara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bikaner',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bundi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Chittaurgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Churu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dausa',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dhaulpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dungarpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Ganganagar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Hanumangarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaisalmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jalore',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhalawar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhunjhunu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jodhpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Karauli',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Kota',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Nagaur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pali',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Rajsamand',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sawai Madhopur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sikar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sirohi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Tonk',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Udaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'East District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'North District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'South District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'West District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'Ariyalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chennai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Coimbatore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Cuddalore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dharmapuri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dindigul',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Erode',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kancheepuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kanniyakumari',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Karur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Krishnagiri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Madurai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Nagapattinam',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Namakkal',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Perambalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Pudukkottai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ramanathapuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Salem',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Sivaganga',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thanjavur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'The Nilgiris',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Theni',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvallur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvarur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thoothukkudi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruchirappalli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirunelveli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruppur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruvannamalai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Vellore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Viluppuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Virudhunagar',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Adilabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Bhadradri Kothagudem',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Hyderabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jagitial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jangoan',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jayashankar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jogulamba Gadwal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kamareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Karimnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Khammam',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kumuram Bheem Asifabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mancherial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medak',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medchal Malkajgiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mulugu',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nagarkurnool',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nalgonda',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Narayanpet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nirmal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nizamabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Peddapalli',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Rajanna Sircilla',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Ranga Reddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Sangareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Siddipet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Suryapet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Vikarabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Wanaparthy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Rural',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Urban',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Yadadri Bhuvanagiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Dhalai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Gomati',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Khowai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'North Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Sipahijala',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'South Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Unokoti',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'West Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Agra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Aligarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ambedkar Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amethi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amroha',\n    othernamesspellings: 'Jyotiba Phule Nagar',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Auraiya',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Azamgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Baghpat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bahraich',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ballia',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Banda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bara Banki',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bareilly',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Basti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bhadohi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bijnor',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Budaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bulandshahr',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chandauli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chitrakoot',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Deoria',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etawah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Faizabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Farrukhabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Fatehpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Firozabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gautam Buddha Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghaziabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghazipur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gonda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gorakhpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hardoi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hathras',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jalaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jaunpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jhansi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kannauj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Dehat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Nagar',\n    othernamesspellings: 'Kanpur city',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kasganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kaushambi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kheri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kushinagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lalitpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lucknow',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahoba',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahrajganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mainpuri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mathura',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mau',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Meerut',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mirzapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Moradabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Muzaffarnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pilibhit',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Prayagraj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rae Bareli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Saharanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sambhal',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sant Kabir Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shahjahanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shamli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shrawasti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Siddharthnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sitapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sonbhadra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sultanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Unnao',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Varanasi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Almora',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Bageshwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Chamoli',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Champawat',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Dehradun',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Haridwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Nainital',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pauri Garhwal',\n    othernamesspellings: 'Pauri or just Garhwal',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pithoragarh',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Rudraprayag',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Tehri Garhwal',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Udham Singh Nagar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Uttarkashi',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Alipurduar',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Bankura',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Birbhum',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Cooch Behar',\n    othernamesspellings: 'Coochbehar',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Dakshin Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Darjeeling',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Hooghly',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Howrah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jalpaiguri',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jhargram',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kalimpong',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kolkata',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Maldah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur West',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Murshidabad',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Nadia',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'North 24 Parganas',\n    othernamesspellings: '24 paraganas north\\r',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Paschim Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purba Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur East',\n    othernamesspellings: 'Purba Medinipur',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purulia',\n    othernamesspellings: 'puruliya',\n    state: 'West Bengal',\n  },\n  {\n    district: 'South 24 Parganas',\n    othernamesspellings: '24 south parganas',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Uttar Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Tenkasi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chengalpattu',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ranipet',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kallakurichi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirupathur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n];\n","import {STATE_CODES} from '../constants';\n\nimport {\n  parse,\n  differenceInDays,\n  isBefore,\n  isSameDay,\n  startOfDay,\n} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const getIndiaDay = () => {\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Kolkata'));\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      // Skip data from the current day\n      const today = getIndiaDay();\n      const date = parse(d.date, 'dd MMMM', new Date(2020, 0, 1));\n      return isBefore(date, today);\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat, index) => ({\n    date: parse(stat.date, 'dd MMMM', new Date(2020, 0, 1)),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = getIndiaDay();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = parse(data[i].date, 'dd-MMM-yy', new Date());\n    // Skip data from the current day\n    if (isBefore(date, today)) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date,\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n\nexport const parseStateTestTimeseries = (data) => {\n  const stateCodeMap = Object.keys(STATE_CODES).reduce((ret, sc) => {\n    ret[STATE_CODES[sc]] = sc;\n    return ret;\n  }, {});\n\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\n    ret[sc] = [];\n    return ret;\n  }, {});\n\n  const today = getIndiaDay();\n  data.forEach((d) => {\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\n    const totaltested = +d.totaltested;\n    if (isBefore(date, today) && totaltested) {\n      const stateCode = stateCodeMap[d.state];\n      const stateTs = testTimseries[stateCode];\n      let dailytested;\n      if (stateTs.length) {\n        const prev = stateTs[stateTs.length - 1];\n        dailytested =\n          differenceInDays(date, prev.date) === 1\n            ? totaltested - prev.totaltested\n            : NaN;\n      } else dailytested = NaN;\n      stateTs.push({\n        date: date,\n        totaltested: totaltested,\n        dailytested: dailytested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const parseTotalTestTimeseries = (data) => {\n  const testTimseries = [];\n  const today = getIndiaDay();\n  data.forEach((d) => {\n    const date = parse(\n      d.updatetimestamp.split(' ')[0],\n      'dd/MM/yyyy',\n      new Date()\n    );\n    const totaltested = +d.totalsamplestested;\n    if (isBefore(date, today) && totaltested) {\n      let dailytested;\n      if (testTimseries.length) {\n        const prev = testTimseries[testTimseries.length - 1];\n        if (isSameDay(date, prev.date)) {\n          prev.dailytested += totaltested - prev.totaltested;\n          prev.totaltested = totaltested;\n        } else {\n          if (differenceInDays(date, prev.date) === 1)\n            dailytested = totaltested - prev.totaltested;\n          else dailytested = NaN;\n        }\n      } else dailytested = NaN;\n      testTimseries.push({\n        date: date,\n        totaltested: totaltested,\n        dailytested: dailytested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const mergeTimeseries = (ts1, ts2) => {\n  const tsRet = Object.assign({}, ts1);\n  for (const state in ts1) {\n    if (ts1.hasOwnProperty(state)) {\n      tsRet[state] = ts1[state].map((d1) => {\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\n        return {\n          totaltested: testData?.totaltested,\n          dailytested: testData?.dailytested,\n          ...d1,\n        };\n      });\n    }\n  }\n  return tsRet;\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const capitalizeAll = (s) => {\n  if (typeof s !== 'string') return '';\n  const str = s.toLowerCase().split(' ');\n  for (let i = 0; i < str.length; i++) {\n    str[i] = capitalize(str[i]);\n  }\n  return str.join(' ');\n};\n\nexport const abbreviate = (s) => {\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\n};\n\nexport const parseDistrictZones = (data, state) => {\n  const zones = data.reduce((ret, d) => {\n    ret[d.state] = ret[d.state] || {};\n    ret[d.state][d.district] = d;\n    return ret;\n  }, {});\n  Object.values(STATE_CODES).forEach((state) => {\n    if (!zones[state]) zones[state] = {};\n  });\n  return state ? {[state]: zones[state]} : zones;\n};\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useEffectOnce} from 'react-use';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  console.log('god = ',data);\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    setData({\n      SC: +props.data.SC,\n      ST: +props.data.ST,\n      OBC: +props.data.OBC,\n      deltaconfirmed: 10,\n\n      deltarecovered: 20,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{t('SC')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.SC)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t('ST')}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.ST)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t('OBC')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.OBC)}{' '}\n        </h1>\n      </div>\n\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  svg,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  if (!svg)\n    svg = d3\n      .create('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height])\n      .style('overflow', 'visible')\n      .style('display', 'block');\n\n  const t = svg.transition().duration(500);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg.selectAll('rect').transition(t).attr('opacity', 0);\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = d3\n        .scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = d3\n        .scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport * as topojson from 'topojson';\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  currentMap,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  isCountryLoaded,\n  mapOption,\n}) {\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n\n  const mapMeta = MAP_META[currentMap.name];\n\n  const ready = useCallback(\n    (geoData) => {\n      const svg = d3.select(choroplethMap.current);\n\n      const topologyStates =\n        mapMeta.mapType === MAP_TYPES.COUNTRY\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            )\n          : {features: []};\n      const topologyDistricts =\n        currentMap.view === MAP_VIEWS.DISTRICTS\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            )\n          : {features: []};\n\n      const topology =\n        currentMap.view === MAP_VIEWS.STATES\n          ? topologyStates\n          : topologyDistricts;\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      // Colorbar\n      let colorScale;\n      if (currentMap.stat === MAP_STATISTICS.ZONE) {\n        colorScale = d3.scaleOrdinal(\n          ['Red', 'Orange', 'Green'],\n          ['#d73027', '#fee08b', '#66bd63']\n        );\n\n        svgLegend.call(() =>\n          legend({\n            color: colorScale,\n            width: widthLegend,\n            height: heightLegend,\n            tickValues: [],\n            marginLeft: 2,\n            marginRight: 20,\n            svg: svgLegend,\n            ordinalWeights: Object.values(statistic),\n          })\n        );\n      } else {\n        const colorInterpolator = (t) => {\n          switch (mapOption) {\n            case 'SC':\n              return d3.interpolateReds(t * 0.85);\n            case 'ST':\n              return d3.interpolateBlues(t * 0.85);\n            case 'OBC':\n              return d3.interpolateGreens(t * 0.85);\n            // case 'deceased':\n            //   return d3.interpolateGreys(t * 0.85);\n            default:\n              return;\n          }\n        };\n        colorScale = d3\n          .scaleSequential(\n            [0, Math.max(1, statistic[mapOption].max)],\n            colorInterpolator\n          )\n          .clamp(true);\n        svgLegend.call(() =>\n          legend({\n            color: colorScale,\n            title:\n              capitalizeAll(mapOption) +\n              (currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? ' cases per million'\n                : ' cases'),\n            width: widthLegend,\n            height: heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (\n                currentMap.stat === MAP_STATISTICS.TOTAL &&\n                !Number.isInteger(d)\n              )\n                return;\n              if (i === n.length - 1) return formatNumber(d) + '+';\n              return formatNumber(d);\n            },\n            marginLeft: 2,\n            marginRight: 20,\n            svg: svgLegend,\n          })\n        );\n      }\n      svgLegend.attr(\n        'class',\n        currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\n      );\n\n      // Add id to each feature\n      const featureStates = topologyStates.features.map((f) => {\n        const state = f.properties.st_nm;\n        const obj = Object.assign({}, f);\n        obj.id = `${mapMeta.graphObjectStates}-${state}`;\n        return obj;\n      });\n\n      // Add id to each feature\n      const featureDistricts = topologyDistricts.features.map((f) => {\n        const district = f.properties.district;\n        const state = f.properties.st_nm;\n        const obj = Object.assign({}, f);\n        obj.id = `${mapMeta.graphObjectDistricts}-${state}${district}`;\n        return obj;\n      });\n\n      /* Draw map */\n      const t = svg.transition().duration(500);\n      let onceTouchedRegion = null;\n      const regionSelection = svg\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.states' : '.districts')\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES\n            ? featureStates\n            : featureDistricts,\n          (d) => d.id\n        )\n        .join((enter) => {\n          const sel = enter.append('path').attr('d', path);\n          sel.append('title');\n          return sel;\n        })\n        .attr('class', function (d) {\n          const isHovered = d3.select(this).classed('map-hover');\n          return `path-region ${mapOption} ${isHovered ? 'map-hover' : ''}`;\n        })\n        .style('cursor', 'pointer')\n        .on('mouseenter', function (d) {\n          const region = {state: d.properties.st_nm};\n          if (d.properties.district) region.district = d.properties.district;\n          setRegionHighlighted(region);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .attr('pointer-events', 'none');\n\n      regionSelection.select('title').text(function (d) {\n        if (currentMap.stat === MAP_STATISTICS.TOTAL) {\n          const state = d.properties.st_nm;\n          const district = d.properties.district;\n          let n;\n          if (district)\n            n =\n              mapData[state] && mapData[state][district]\n                ? mapData[state][district][mapOption]\n                : 0;\n          else n = mapData[state] ? mapData[state][mapOption] : 0;\n          return (\n            Number(\n              parseFloat(\n                100 * (n / (statistic[mapOption].total || 0.001))\n              ).toFixed(2)\n            ).toString() +\n            '% from ' +\n            capitalizeAll(district ? district : state)\n          );\n        }\n      });\n\n      regionSelection\n        .transition(t)\n        .attr('fill', function (d) {\n          let n;\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            const state = d.properties.st_nm;\n            const district = d.properties.district;\n            n =\n              mapData[state] && mapData[state][district]\n                ? mapData[state][district]\n                : 0;\n          } else {\n            const state = d.properties.st_nm;\n            const district = d.properties.district;\n            if (district)\n              n =\n                mapData[state] && mapData[state][district]\n                  ? mapData[state][district][mapOption]\n                  : 0;\n            else n = mapData[state] ? mapData[state][mapOption] : 0;\n          }\n          const color = n === 0 ? '#ffffff00' : colorScale(n);\n          return color;\n        })\n        .attr('stroke', function () {\n          const isHovered = d3.select(this).classed('map-hover');\n          if (isHovered) this.parentNode.appendChild(this);\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            return isHovered ? '#343a40' : null;\n          } else {\n            return isHovered\n              ? `${\n                  mapOption === 'SC'\n                    ? '#ff073a'\n                    : mapOption === 'ST'\n                    ? '#007bff'\n                    : mapOption === 'OBC'\n                    ? '#28a745'\n                    // : mapOption === 'deceased'\n                    // ? '#6c757d'\n                    : ''\n                }`\n              : null;\n          }\n        })\n        .transition()\n        .attr('pointer-events', 'all');\n\n      svg\n        .transition()\n        .duration(mapMeta.mapType === MAP_TYPES.STATE ? 250 : 0)\n        .on('end', () =>\n          svg.attr(\n            'class',\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\n          )\n        );\n\n      let meshStates = [];\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n        meshStates = [\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\n        ];\n        meshStates[0].id = mapMeta.graphObjectStates;\n      }\n      let meshDistricts = [];\n      if (currentMap.view === MAP_VIEWS.DISTRICTS) {\n        // Add id to mesh\n        meshDistricts = [\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\n        ];\n        meshDistricts[0].id = mapMeta.graphObjectDistricts;\n      }\n      svg\n        .select(\n          currentMap.view === MAP_VIEWS.STATES\n            ? '.state-borders'\n            : '.district-borders'\n        )\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\n          (d) => d.id\n        )\n        .join((enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', width / 250)\n        )\n        .attr('fill', 'none')\n        .transition(t)\n        .attr('stroke-width', function () {\n          return mapMeta.mapType === MAP_TYPES.COUNTRY &&\n            currentMap.view === MAP_VIEWS.DISTRICTS\n            ? 0\n            : width / 250;\n        })\n        .attr('stroke', function () {\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            return '#00000060';\n          } else {\n            return `${\n              mapOption === 'SC'\n                ? '#ff073a30'\n                : mapOption === 'ST'\n                ? '#007bff30'\n                : mapOption === 'OBC'\n                ? '#28a74530'\n                // : mapOption === 'deceased'\n                // ? '#6c757d30'\n                : ''\n            }`;\n          }\n        });\n\n      svg\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.districts' : '.states')\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES\n            ? featureDistricts\n            : featureStates,\n          (d) => d.id\n        )\n        .join((enter) => enter.append('path').attr('d', path))\n        .attr('class', 'path-region')\n        .attr('fill', 'none')\n        .attr('stroke', 'none')\n        .attr('pointer-events', 'none');\n\n      svg\n        .select(\n          currentMap.view === MAP_VIEWS.STATES\n            ? '.district-borders'\n            : '.state-borders'\n        )\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\n          (d) => d.id\n        )\n        .join((enter) => enter.append('path').attr('d', path))\n        .attr('fill', 'none')\n        .transition(t)\n        .attr('stroke-width', width / 250)\n        .attr('stroke', '#343a4099');\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.selectAll('.path-region').attr('pointer-events', 'none');\n        // Switch map\n        changeMap(d.properties.st_nm);\n      }\n\n      // Reset on tapping outside map\n      svg.attr('pointer-events', 'auto').on('click', () => {\n        if (mapMeta.mapType !== MAP_TYPES.STATE) {\n          setRegionHighlighted({\n            state: 'Total',\n          });\n        }\n      });\n    },\n    [\n      mapMeta,\n      currentMap.stat,\n      currentMap.view,\n      statistic,\n      mapOption,\n      isCountryLoaded,\n      mapData,\n      setRegionHighlighted,\n      changeMap,\n    ]\n  );\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n      }\n    })();\n  }, [mapMeta, statistic, ready]);\n\n  useEffect(() => {\n    const highlightRegionInMap = (region) => {\n      const paths = d3.selectAll('.path-region');\n      paths.attr('stroke', null);\n      paths.classed('map-hover', (d, i, nodes) => {\n        if (\n          region.district === d.properties?.district &&\n          region.state === d.properties.st_nm\n        ) {\n          nodes[i].parentNode.appendChild(nodes[i]);\n          d3.select(nodes[i]).attr('stroke', function (d) {\n            if (currentMap.stat === MAP_STATISTICS.ZONE) return '#343a40';\n            return d3.select(this).classed('SC')\n              ? '#ff073a'\n              : d3.select(this).classed('ST')\n              ? '#007bff'\n              : d3.select(this).classed('OBC')\n              ? '#28a745'\n              // : d3.select(this).classed('deceased')\n              // ? '#6c757d'\n              : null;\n          });\n          return true;\n        }\n        return false;\n      });\n    };\n    highlightRegionInMap(regionHighlighted);\n  }, [regionHighlighted, currentMap.stat]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={choroplethMap}>\n          <g className=\"states\" />\n          <g className=\"districts\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n        mapData[currentMap.name]?.Unknown &&\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\n          <div className=\"disclaimer\">\n            <Icon.AlertCircle />\n            {`District-wise ${mapOption} numbers are under reconciliation`}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"50\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        >\n          <image className=\"ramp\" />\n          <g className=\"axis\">\n            <text className=\"axistext\" />\n          </g>\n        </svg>\n        <canvas\n          className=\"color-scale\"\n          style={{position: 'absolute', height: 0}}\n        />\n      </div>\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549 0 0 0 0.08627451 0 0.91372549 0 0 0.08627451 0 0 0.854901961 0 0.145098039 0 0 0 1 0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default ChoroplethMap;\n","import ChoroplethMap from './choropleth';\nimport {testedToolTip} from './tooltips';\n\nimport {\n  MAP_META,\n  MAP_STATISTICS,\n  MAP_TYPES,\n  MAP_VIEWS,\n  STATE_CODES_REVERSE,\n  STATE_POPULATIONS,\n} from '../constants';\nimport {formatDate, formatNumber} from '../utils/commonfunctions';\n\nimport {formatDistance, format, parse} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  }\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\n    return false;\n  }\n  if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  return region;\n};\n\nfunction MapExplorer({\n  mapName,\n  states,\n  districts,\n  zones,\n  stateTestData,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  mapOption,\n  setMapOption,\n  isCountryLoaded = true,\n}) {\n  const {t} = useTranslation();\n  const [currentMap, setCurrentMap] = useState({\n    name: mapName,\n    stat: MAP_STATISTICS.TOTAL,\n    view:\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\n        ? MAP_VIEWS.STATES\n        : MAP_VIEWS.DISTRICTS,\n  });\n  const currentMapMeta = MAP_META[currentMap.name];\n\n  const [statistic, currentMapData] = useMemo(() => {\n    let currentMapData = {};\n    let statistic = {};\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\n      const dataTypes = ['Red', 'Orange', 'Green'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = 0;\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc2[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc2;\n          }, {});\n          return acc1;\n        }, {});\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const state = currentMap.name;\n        currentMapData[state] = Object.keys(zones[state]).reduce(\n          (acc, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc;\n          },\n          {}\n        );\n      }\n    } else {\n      const dataTypes = ['SC', 'ST', 'OBC'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = {total: 0, max: 0};\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        currentMapData = states.reduce((acc, state) => {\n          acc[state.state] = {};\n          dataTypes.forEach((dtype) => {\n            let typeCount = parseInt(\n              state[dtype !== 'deceased' ? dtype : 'deaths']\n            );\n            if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\n              typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\n            if (state.state !== 'Total') {\n              statistic[dtype].total += typeCount;\n              if (typeCount > statistic[dtype].max) {\n                statistic[dtype].max = typeCount;\n              }\n            }\n            acc[state.state][dtype] = typeCount;\n          });\n          return acc;\n        }, {});\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const districtWiseData = (\n          districts[currentMap.name] || {districtData: {}}\n        ).districtData;\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\n          (acc, district) => {\n            acc[district] = {};\n            dataTypes.forEach((dtype) => {\n              const typeCount = parseInt(districtWiseData[district][dtype]);\n              statistic[dtype].total += typeCount;\n              if (typeCount > statistic[dtype].max) {\n                statistic[dtype].max = typeCount;\n              }\n              acc[district][dtype] = typeCount;\n            });\n            return acc;\n          },\n          {}\n        );\n        currentMapData[currentMap.name].Total = states.find(\n          (state) => currentMap.name === state.state\n        );\n      }\n    }\n    return [statistic, currentMapData];\n  }, [\n    currentMap.name,\n    currentMap.stat,\n    currentMapMeta.mapType,\n    districts,\n    zones,\n    states,\n  ]);\n\n  const [hoveredRegion, panelRegion] = useMemo(() => {\n    if (!regionHighlighted.district) {\n      const state = getRegionFromState(\n        states.find((state) => regionHighlighted.state === state.state)\n      );\n      return [state, state];\n    } else {\n      const stateDistrictObj = districts[regionHighlighted.state] || {\n        districtData: {},\n      };\n      const districtData = stateDistrictObj.districtData[\n        regionHighlighted.district\n      ] || {\n        confirmed: 0,\n        active: 0,\n        recovered: 0,\n        deaths: 0,\n      };\n      const district = getRegionFromDistrict(\n        districtData,\n        regionHighlighted.district\n      );\n      let state = getRegionFromState(\n        states.find((state) => state.state === regionHighlighted.state)\n      );\n      district.district = regionHighlighted.district;\n      district.state = state.state;\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n        state = states.find((state) => state.state === 'Total');\n      return [district, state];\n    }\n  }, [states, districts, currentMapMeta.mapType, regionHighlighted]);\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    if ('district' in regionHighlighted) {\n      if (\n        currentMap.name !== regionHighlighted.state &&\n        !(\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n        )\n      ) {\n        const state = regionHighlighted.state;\n        const newMapMeta = MAP_META[state];\n        if (!newMapMeta) {\n          return;\n        }\n        setCurrentMap({\n          name: state,\n          view: MAP_VIEWS.DISTRICTS,\n          stat:\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\n              ? MAP_STATISTICS.TOTAL\n              : currentMap.stat,\n        });\n      }\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\n      setCurrentMap({\n        name: 'India',\n        view:\n          currentMap.stat === MAP_STATISTICS.ZONE\n            ? MAP_VIEWS.DISTRICTS\n            : MAP_VIEWS.STATES,\n        stat: currentMap.stat,\n      });\n    }\n  }, [isCountryLoaded, regionHighlighted, currentMap, currentMapMeta.mapType]);\n\n  const switchMapToState = useCallback(\n    (state) => {\n      const newMapMeta = MAP_META[state];\n      if (!newMapMeta) {\n        return;\n      }\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\n        const {districtData} = districts[state] || {\n          districtData: {},\n        };\n        const topDistrict = Object.keys(districtData)\n          .filter((state) => state !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        ReactDOM.unstable_batchedUpdates(() => {\n          setRegionHighlighted({\n            district: topDistrict,\n            state: state,\n          });\n          setCurrentMap({\n            name: state,\n            view: MAP_VIEWS.DISTRICTS,\n            stat:\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? MAP_STATISTICS.TOTAL\n                : currentMap.stat,\n          });\n        });\n      } else {\n        ReactDOM.unstable_batchedUpdates(() => {\n          setCurrentMap({\n            name: 'India',\n            view:\n              currentMap.stat === MAP_STATISTICS.ZONE\n                ? MAP_VIEWS.DISTRICTS\n                : MAP_VIEWS.STATES,\n            stat: currentMap.stat,\n          });\n          setRegionHighlighted({\n            state: 'Total',\n          });\n        });\n      }\n    },\n    [currentMap.stat, districts, setRegionHighlighted]\n  );\n\n  // const testObj = useMemo(\n  //   () =>\n  //     stateTestData.find(\n  //       (obj) => obj.state === panelRegion.state && obj.totaltested !== ''\n  //     ),\n  //   [stateTestData, panelRegion]\n  // );\n\n  let hoveredRegionCount;\n  let hoveredRegionZone;\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\n    const data =\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\n        : hoveredRegion.state !== currentMap.name\n        ? currentMapData[hoveredRegion.state]\n        : currentMapData[hoveredRegion.state].Total;\n    hoveredRegionCount = data\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\n        : data[mapOption]\n      : 0;\n  } else {\n    hoveredRegionZone =\n      zones[hoveredRegion.state] &&\n      zones[hoveredRegion.state][hoveredRegion.district]\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\n        : '';\n  }\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>\n          {t(currentMap.name)} {t('Map')}\n        </h1>\n        <h6>\n          {window.innerWidth <= 769 ? t('Tap') : t('Hover')} over a{' '}\n          {currentMapMeta.mapType === MAP_TYPES.COUNTRY\n            ? t('state/UT')\n            : t('district')}{' '}\n          {t('for more details')}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div\n          className={`stats fadeInUp ${\n            mapOption === 'SC' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2s'}}\n          onClick={() => setMapOption('SC')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('SC') : t('SC')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.SC)}</h1>\n            {/* <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6> */}\n          </div>\n        </div>\n\n        <div\n          className={`stats is-blue fadeInUp ${\n            mapOption === 'ST' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.1s'}}\n          onClick={() => setMapOption('ST')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('ST') : t('ST')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.ST)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-green fadeInUp ${\n            mapOption === 'OBC' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.2s'}}\n          onClick={() => setMapOption('OBC')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('OBC') : t('OBC')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.OBC)}</h1>\n            {/* <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6> */}\n          </div>\n        </div>\n\n\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2\n          className={`${\n            currentMap.stat !== MAP_STATISTICS.ZONE\n              ? mapOption !== 'SC'\n                ? mapOption\n                : ''\n              : hoveredRegionZone\n          }`}\n        >\n          {hoveredRegion.district\n            ? t(hoveredRegion.district)\n            : t(hoveredRegion.state)}\n        </h2>\n\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\n          panelRegion.lastupdatedtime && (\n            <div className=\"last-update\">\n              <h6>{t('Last updated')}</h6>\n              <h3>\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\n                  ? ''\n                  : formatDistance(\n                      new Date(formatDate(panelRegion.lastupdatedtime)),\n                      new Date()\n                    ) +\n                    ' ' +\n                    t('ago')}\n              </h3>\n            </div>\n          )}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t('Visit state page')}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) ? (\n          <h1\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\n          >\n            {hoveredRegionCount}\n            <br />\n            <span>\n              {mapOption}{' '}\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? ` ${t('per million')}`\n                : ''}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown &&\n        currentMapData.Unknown[mapOption] > 0 ? (\n          <h4 className=\"unknown\">\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\n            {t('people')}\n          </h4>\n        ) : null}\n      </div>\n\n      <div>\n        {mapOption && (\n          <ChoroplethMap\n            statistic={statistic}\n            currentMap={currentMap}\n            mapData={currentMapData}\n            regionHighlighted={regionHighlighted}\n            setRegionHighlighted={setRegionHighlighted}\n            changeMap={switchMapToState}\n            isCountryLoaded={isCountryLoaded}\n            mapOption={mapOption}\n          />\n        )}\n      </div>\n\n      <div className=\"tabs-map\">\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view:\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                  ? MAP_VIEWS.STATES\n                  : MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.TOTAL,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n          }}\n        >\n          <h4>{t('Total Cases')}</h4>\n        </div>\n        {isCountryLoaded && (\n          <div\n            className={`tab ${\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\n            }`}\n            onClick={() => {\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n              setCurrentMap({\n                name: currentMap.name,\n                view: MAP_VIEWS.STATES,\n                stat: MAP_STATISTICS.PER_MILLION,\n              });\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n            }}\n          >\n            <h4>\n              {t('Cases per million')}\n              <sup>&dagger;</sup>\n            </h4>\n          </div>\n        )}\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view: MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.ZONE,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: 'Total',\n              });\n          }}\n        >\n          <h4>Zones</h4>\n        </div>\n      </div>\n\n      <h6 className=\"footnote table-fineprint\">\n        &dagger; {t('Based on 2019 population projection by NCP') + '('}\n        <a\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n          target=\"_noblank\"\n          style={{color: '#6c757d'}}\n        >\n          {t('report')}\n        </a>\n        )\n      </h6>\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer, isEqual);\n","import {STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  capitalize,\n  abbreviate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport {formatDistance} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction StateCell({state, statistic}) {\n  const ArrowUp = useMemo(() => <Icon.ArrowUp />, []);\n\n  return (\n    <td>\n      <span className={classnames('delta', `is-${statistic}`)}>\n        {state[`delta${statistic}`] > 0 && ArrowUp}\n        {state[`delta${statistic}`] > 0 && state[`delta${statistic}`]}\n      </span>\n      <span className=\"total\">\n        {state[statistic] === 0 ? '-' : formatNumber(state[statistic])}\n      </span>\n    </td>\n  );\n}\n\nfunction DistrictHeaderCell({handleSort, statistic, sortData}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <td onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={statistic}\n        >\n          {breakpoint === 'L'\n            ? statistic.slice(0)\n            : breakpoint === 'S'\n            ? capitalize(\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\n              )\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\n        </abbr>\n        <div\n          style={{\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\n          }}\n        >\n          {sortData.isAscending ? (\n            <div className=\"arrow-up\" />\n          ) : (\n            <div className=\"arrow-down\" />\n          )}\n        </div>\n      </div>\n    </td>\n  );\n}\n\nfunction PureDistrictCell({district, statistic}) {\n  return (\n    <td>\n      <span className={classnames('delta', `is-${statistic}`)}>\n        {district.delta[statistic] > 0 && <Icon.ArrowUp />}\n        {district.delta[statistic] > 0 && district.delta[statistic]}\n      </span>\n      <span className=\"total\">{formatNumber(district[statistic])}</span>\n    </td>\n  );\n}\n\nconst DistrictCell = React.memo(PureDistrictCell);\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (equal(prevProps.regionHighlighted?.district, prevProps.district)) {\n    return false;\n  }\n  if (equal(currProps.regionHighlighted?.district, currProps.district)) {\n    return false;\n  }\n  return true;\n};\n\nfunction PureDistrictRow({\n  regionHighlighted,\n  district,\n  state,\n  zone,\n  onHighlightDistrict,\n  sortedDistricts,\n  districts,\n}) {\n  const {t} = useTranslation();\n\n  return (\n    <tr\n      key={district.district}\n      className={classnames('district', {\n        'is-highlighted': regionHighlighted?.district === district,\n      })}\n      onMouseEnter={() => onHighlightDistrict(district, state)}\n    >\n      <td className={classnames(`is-${zone?.zone}`)}>\n        <div className=\"title-chevron\">\n          <span className=\"title-icon\">\n            {t(district)}\n            <span\n              data-for=\"district\"\n              data-tip={[[sortedDistricts[district].notes]]}\n              data-event=\"touchstart mouseover\"\n              data-event-off=\"mouseleave\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              {sortedDistricts[district].notes && <Icon.Info />}\n            </span>\n          </span>\n        </div>\n      </td>\n\n      {DISTRICT_ROW_STATISTICS.map((statistic) => (\n        <DistrictCell\n          key={statistic}\n          district={districts[district]}\n          statistic={statistic}\n        />\n      ))}\n    </tr>\n  );\n}\n\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.state.state, currProps.state.state)) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.regionHighlighted?.state,\n      currProps.regionHighlighted?.state\n    )\n  ) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.regionHighlighted?.district,\n      currProps.regionHighlighted?.district\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nfunction Row({\n  index,\n  state,\n  districts,\n  zones,\n  regionHighlighted,\n  onHighlightState,\n  onHighlightDistrict,\n}) {\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'SC',\n    isAscending: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const Chevron = useMemo(\n    () => (\n      <span\n        className={classnames(\n          'dropdown',\n          {rotateRightDown: showDistricts},\n          {rotateDownRight: !showDistricts}\n        )}\n      >\n        <Icon.ChevronDown />\n      </span>\n    ),\n    [showDistricts]\n  );\n\n  const _onHighlightState = useCallback(\n    (state) => {\n      if (!equal(state.state, regionHighlighted?.state)) {\n        onHighlightState(state);\n      }\n    },\n    [onHighlightState, regionHighlighted]\n  );\n\n  // const doSort = useCallback(\n  //   (sortData) => {\n  //     const sorted = {};\n  //     Object.keys(sortedDistricts)\n  //       .sort((district1, district2) => {\n  //         if (sortData.sortColumn !== 'district') {\n  //           return sortData.isAscending\n  //             ? parseInt(sortedDistricts[district1][sortData.sortColumn]) -\n  //                 parseInt(sortedDistricts[district2][sortData.sortColumn])\n  //             : parseInt(sortedDistricts[district2][sortData.sortColumn]) -\n  //                 parseInt(sortedDistricts[district1][sortData.sortColumn]);\n  //         } else {\n  //           return sortData.isAscending\n  //             ? district1.localeCompare(district2)\n  //             : district2.localeCompare(district1);\n  //         }\n  //       })\n  //       .forEach((key) => {\n  //         sorted[key] = sortedDistricts[key];\n  //       });\n  //     setSortedDistricts(sorted);\n  //   },\n  //   [sortedDistricts]\n  // );\n\n  const handleSort = useCallback(\n    (statistic) => {\n      const newSortData = {\n        isAscending: !sortData.isAscending,\n        sortColumn: statistic,\n      };\n      // doSort(newSortData);\n      setSortData(Object.assign({}, sortData, newSortData));\n    },\n    // [doSort, setSortData, sortData]\n  );\n\n  useEffectOnce(() => {\n    // if (state.statecode !== 'TT') doSort(sortData);\n  });\n\n  return (\n    <React.Fragment>\n      <tr\n        className={classnames(\n          'state',\n          {'is-total': state.statecode === 'TT'},\n          {'is-highlighted': regionHighlighted?.state === state.state},\n          {'is-odd': index % 2 === 0}\n        )}\n        onMouseEnter={() => _onHighlightState(state)}\n        onClick={\n          state.statecode !== 'TT'\n            ? () => {\n                setShowDistricts(!showDistricts);\n              }\n            : null\n        }\n      >\n        <td>\n          <div className=\"title-chevron\">\n            {state.statecode !== 'TT' && Chevron}\n            <span className=\"title-icon\">\n              {t(state.state)}\n\n              <span\n                data-tip={[t(`${state.statenotes}`)]}\n                data-event=\"touchstart mouseover\"\n                data-event-off=\"mouseleave\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                {state.statenotes && <Icon.Info />}\n              </span>\n            </span>\n          </div>\n        </td>\n\n        {STATE_ROW_STATISTICS.map((statistic, index) => (\n          <StateCell key={index} state={state} statistic={statistic} />\n        ))}\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className=\"is-spacer\">\n            <td colSpan={5}>\n              <p />\n            </td>\n          </tr>\n\n          <tr className={'state-last-update'}>\n            <td colSpan={3} style={{paddingBottom: 0}}>\n              <p className=\"spacer\"></p>\n              <p>\n                {isNaN(Date.parse(formatDate(state.lastupdatedtime)))\n                  ? ''\n                  : `${t('Last updated')} ${formatDistance(\n                      new Date(formatDate(state.lastupdatedtime)),\n                      new Date()\n                    )} ${t('ago')}`}\n              </p>\n              {sortedDistricts?.Unknown && (\n                <div className=\"disclaimer\">\n                  <Icon.AlertCircle />\n                  {t('District-wise numbers are under reconciliation')}\n                </div>\n              )}\n            </td>\n            <td\n              align=\"center\"\n              className=\"state-page-link\"\n              colSpan={2}\n              onClick={() => {\n                history.push(`state/${state.statecode}`);\n              }}\n            >{`View ${t(state.state)}'s Page`}</td>\n          </tr>\n\n          <tr className={classnames('district-heading')}>\n            <td onClick={() => handleSort('district')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t('District')}</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n\n            {DISTRICT_ROW_STATISTICS.map((statistic, index) => (\n              <DistrictHeaderCell\n                key={index}\n                handleSort={handleSort}\n                statistic={statistic}\n                sortData={sortData}\n              />\n            ))}\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(sortedDistricts).map((district, index) => (\n          <DistrictRow\n            key={district}\n            state={state}\n            district={district}\n            districts={districts}\n            zone={zones[district]}\n            sortedDistricts={sortedDistricts}\n            regionHighlighted={regionHighlighted}\n            onHighlightDistrict={onHighlightDistrict}\n          />\n        ))}\n\n      {showDistricts && (\n        <tr className=\"is-spacer\">\n          <td colSpan={5}>\n            <p />\n            <ReactTooltip\n              id=\"district\"\n              place=\"right\"\n              type=\"dark\"\n              effect=\"solid\"\n              multiline={true}\n              scrollHide={true}\n              globalEventOff=\"click\"\n            />\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row, isEqual);\n","import Row from './row';\n\nimport {STATE_ROW_STATISTICS} from '../constants';\nimport {capitalize, abbreviate} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useMemo, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction StateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <th onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={statistic}\n        >\n          {breakpoint === 'L'\n            ? statistic.slice(0)\n            : breakpoint === 'S'\n            ? capitalize(\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\n              )\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\n        </abbr>\n        <div\n          style={{\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\n          }}\n        >\n          <div\n            className={classnames(\n              {'arrow-up': sortData.isAscending},\n              {'arrow-down': !sortData.isAscending}\n            )}\n          />\n        </div>\n      </div>\n    </th>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  return equal(prevProps.regionHighlighted, currProps.regionHighlighted);\n};\n\nfunction Table({\n  states,\n  districts,\n  zones,\n  regionHighlighted,\n  onHighlightState,\n  onHighlightDistrict,\n}) {\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n  const {t} = useTranslation();\n\n  const [sortedStates, setSortedStates] = useState(\n    states.filter((state) => state.statecode !== 'TT')\n  );\n\n  // const FineprintTop = useMemo(\n  //   () => (\n  //     <React.Fragment>\n  //       <h5\n  //         className=\"table-fineprint fadeInUp\"\n  //         style={{animationDelay: '1.5s'}}\n  //       >\n  //         {t('Compiled from State Govt. numbers')},{' '}\n  //         <Link to=\"/faq\" style={{color: '#6c757d'}}>\n  //           {t('know more')}!\n  //         </Link>\n  //       </h5>\n  //       <h5\n  //         className=\"table-fineprint fadeInUp\"\n  //         style={{animationDelay: '1.5s'}}\n  //       >\n  //         District zones as published by MoHFW,{' '}\n  //         <a\n  //           href=\"https://www.facebook.com/airnewsalerts/photos/a.262571017217636/1710062729135117/?type=3&theater\"\n  //           style={{color: '#6c757d'}}\n  //         >\n  //           source\n  //         </a>\n  //       </h5>\n  //     </React.Fragment>\n  //   ),\n  //   [t]\n  // );\n\n  // const FineprintBottom = useMemo(\n  //   () => (\n  //     <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n  //       {states.slice(1).filter((s) => s && s.confirmed > 0).length} States/UTS\n  //       Affected\n  //     </h5>\n  //   ),\n  //   [states]\n  // );\n\n  const doSort = useCallback(\n    (sortData) => {\n      const newSortedStates = [...sortedStates].sort((x, y) => {\n        if (sortData.sortColumn !== 'state') {\n          return sortData.isAscending\n            ? parseInt(x[sortData.sortColumn]) -\n                parseInt(y[sortData.sortColumn])\n            : parseInt(y[sortData.sortColumn]) -\n                parseInt(x[sortData.sortColumn]);\n        } else {\n          return sortData.isAscending\n            ? x[sortData.sortColumn].localeCompare(y[sortData.sortColumn])\n            : y[sortData.sortColumn].localeCompare(x[sortData.sortColumn]);\n        }\n      });\n      setSortedStates(newSortedStates);\n    },\n    [sortedStates]\n  );\n\n  const handleSort = useCallback(\n    (statistic) => {\n      const newSortData = {\n        isAscending: !sortData.isAscending,\n        sortColumn: statistic,\n      };\n      doSort(newSortData);\n      setSortData(Object.assign({}, sortData, newSortData));\n    },\n    [doSort, setSortData, sortData]\n  );\n\n  useEffectOnce(() => {\n    doSort(sortData);\n  });\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <ReactTooltip\n          place=\"right\"\n          type=\"dark\"\n          effect=\"solid\"\n          multiline={true}\n          globalEventOff=\"click\"\n        />\n\n        {/* {FineprintTop} */}\n\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th className=\"state-heading\" onClick={() => handleSort('state')}>\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('State/UT')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    <div\n                      className={classnames(\n                        {'arrow-up': sortData.isAscending},\n                        {'arrow-down': !sortData.isAscending}\n                      )}\n                    />\n                  </div>\n                </div>\n              </th>\n              {STATE_ROW_STATISTICS.map((statistic, index) => (\n                <StateHeaderCell\n                  key={index}\n                  handleSort={handleSort}\n                  sortData={sortData}\n                  statistic={statistic}\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {states && (\n            <tbody>\n              {sortedStates.map((state, index) => {\n                // if (state.confirmed > 0 && state.statecode !== 'TT') {\n                  return (\n                    <Row\n                      key={state.statecode}\n                      state={state}\n                      districts={districts[state.state]?.districtData}\n                      zones={zones[state.state]}\n                      regionHighlighted={\n                        equal(regionHighlighted?.state, state.state)\n                          ? regionHighlighted\n                          : null\n                      }\n                      onHighlightState={onHighlightState}\n                      onHighlightDistrict={onHighlightDistrict}\n                    />\n                  );\n                // }\n                return null;\n              })}\n            </tbody>\n          )}\n\n          {states && (\n            <tbody>\n              <Row\n                key={0}\n                state={states[0]}\n                onHighlightState={onHighlightState}\n              />\n            </tbody>\n          )}\n        </table>\n        {/* {states && FineprintBottom} */}\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default React.memo(Table, isEqual);\n","// import LanguageSwitcher from './languageswitcher';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Table from './table';\nimport Updates from './updates';\n\nimport {STATE_CODES_REVERSE} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  mergeTimeseries,\n  preprocessTimeseries,\n  parseStateTimeseries,\n  parseStateTestTimeseries,\n  parseTotalTestTimeseries,\n  parseDistrictZones,\n  //  isDevelopmentOrTest,\n} from '../utils/commonfunctions';\n\nimport 'intersection-observer';\nimport Observer from '@researchgate/react-intersection-observer';\nimport axios from 'axios';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useEffectOnce, useLocalStorage} from 'react-use';\n\nfunction Home(props) {\n  const [states, setStates] = useState(null);\n  const [vstates, setVStates] = useState(null);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\n  const [districtZones, setDistrictZones] = useState(null);\n  const [stateTestData, setStateTestData] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState(null);\n  const [fetched, setFetched] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    state: 'Total',\n  });\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [mapOption, setMapOption] = useState('SC');\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\n    false\n  );\n\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\n    'lastViewedLog',\n    null\n  );\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n\n  const Bell = useMemo(\n    () => (\n      <Icon.Bell\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n          setNewUpdate(false);\n        }}\n      />\n    ),\n    [setNewUpdate, showUpdates]\n  );\n\n  const BellOff = useMemo(\n    () => (\n      <Icon.BellOff\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n        }}\n      />\n    ),\n    [showUpdates]\n  );\n\n  useEffectOnce(() => {\n    getStates();\n  });\n\n  // useEffectOnce(() => {\n  //   axios\n  //     .get('https://api.covid19india.org/updatelog/log.json')\n  //     .then((response) => {\n  //       const lastTimestamp = response.data\n  //         .slice()\n  //         .reverse()[0]\n  //         .timestamp.toString();\n  //       if (lastTimestamp !== lastViewedLog) {\n  //         setNewUpdate(true);\n  //         setLastViewedLog(lastTimestamp);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // });\n\n  const getStates = async () => {\n    try {\n      const [\n        // {data: statesDailyResponse},\n        {data: zonesResponse},\n      ] = await Promise.all([\n        // axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://script.google.com/macros/s/AKfycbxWDKEroK76lX8h2A0ui3m75iLyIr6QaSHqEcZDd536HYzJFC08/exec'),\n      ]);\n\n      const [\n        // {data},\n        {data: vstates},\n        {data: stateDistrictWiseResponse},\n        // {data: stateTestData},\n      ] = await Promise.all([\n        // axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://script.google.com/macros/s/AKfycbxSoELl1el6cJHtsdNcldXYgh4Tn69ofoVyNSfKGj9n2ar5YV4/exec'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        // axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n      setVStates(vstates);\n      // setStates(data.statewise);\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\n\n      // const ts = parseStateTimeseries(statesDailyResponse);\n      // ts['TT'] = preprocessTimeseries(data.cases_time_series);\n      // Testing data timeseries\n      // const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\n      // testTs['TT'] = parseTotalTestTimeseries(data.tested);\n      // Merge\n      // const tsMerged = mergeTimeseries(ts, testTs);\n      // setTimeseries(tsMerged);\n\n      setLastUpdated(vstates[0].lastupdatedtime);\n\n      // const testData = [...stateTestData.states_tested_data].reverse();\n      // const totalTest = data.tested[data.tested.length - 1];\n      // testData.push({\n      //   updatedon: totalTest.updatetimestamp.split(' ')[0],\n      //   totaltested: totalTest.totalsamplestested,\n      //   source: totalTest.source,\n      //   state: 'Total',\n      // });\n      // setStateTestData(testData);\n\n      setStateDistrictWiseData(stateDistrictWiseResponse);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = useCallback((state) => {\n    if (!state) return setRegionHighlighted(null);\n    setRegionHighlighted({state: state.state});\n  }, []);\n\n  const onHighlightDistrict = useCallback((district, state) => {\n    if (!state && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state: state.state});\n  }, []);\n\n  const options = {\n    rootMargin: '0px 0px 0px 0px',\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <Helmet>\n          <title>Coronavirus Outbreak in India - covid19india.org</title>\n          <meta\n            name=\"title\"\n            content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n          />\n        </Helmet>\n\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            {/* <LanguageSwitcher />*/}\n\n\n            {/* <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {fetched && !showUpdates && (\n                <div className=\"bell-icon\">\n                  {fetched && Bell}\n                  {newUpdate && <div className=\"indicator\"></div>}\n                </div>\n              )}\n              {fetched && showUpdates && BellOff}\n            </div> */}\n          </div>\n\n          {/* {showUpdates && <Updates />} */}\n\n          {states && <Level data={vstates[0]} />}\n          {/* {timeseries && <Minigraph timeseries={timeseries['TT']} />} */}\n          {stateDistrictWiseData && (\n            <Table\n              // states={states}\n              states={vstates}\n              summary={false}\n              districts={stateDistrictWiseData}\n              zones={districtZones}\n              regionHighlighted={regionHighlighted}\n              setRegionHighlighted={setRegionHighlighted}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          <React.Fragment>\n            {fetched && (\n              <MapExplorer\n                mapName={'India'}\n                states={vstates}\n                districts={stateDistrictWiseData}\n                zones={districtZones}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                setRegionHighlighted={setRegionHighlighted}\n                anchor={anchor}\n                setAnchor={setAnchor}\n                mapOption={mapOption}\n                setMapOption={setMapOption}\n              />\n            )}\n\n          </React.Fragment>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import Home from './components/home';\n\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React, {Suspense, lazy} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {useLocalStorage, useEffectOnce} from 'react-use';\n\nimport './App.scss';\n\n\n\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NGO',\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://www.covid19india.org/',\n  image: 'https://www.covid19india.org/thumbnail.png',\n};\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/covid19skeleton/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\n\n  useEffectOnce(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(true);\n    } else if (\n      window.matchMedia &&\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(false);\n    }\n  });\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      <Router>\n        <ScrollToTop />\n        <Suspense fallback={<div className=\"lazy\"></div>}>\n          <Route\n            render={({location}) => (\n              <div className=\"Almighty-Router\">\n                <Switch location={location}>\n                  {pages.map((page, index) => {\n                    return (\n                      <Route\n                        exact\n                        path={page.pageLink}\n                        render={({match}) => (\n                          <page.view key={match.params.stateCode || index} />\n                        )}\n                        key={index}\n                      />\n                    );\n                  })}\n                  <Redirect to=\"/covid19skeleton/\" />\n                </Switch>\n              </div>\n            )}\n          />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from './App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}